#ifdef TINY_CRYPTO_TEST

#include "sm2p256v1.h"
#include <string.h>
#include <stdlib.h>
#include <stdio.h>

using namespace tc;
using namespace tc::sm2p256v1;

// clang-format off
/*
from random import randint

UINT256_MAX = (1 << 256) - 1
sm2p = 0xfffffffeffffffffffffffffffffffffffffffff00000000ffffffffffffffff
sm2n = 0xfffffffe_ffffffff_ffffffff_ffffffff_7203df6b_21c6052b_53bbf409_39d54123


def dump_int(prefix: str, n: int, end: str):
    data = n.to_bytes(256 // 8, 'big')
    print(prefix, end='')
    for item in data:
        print("0x" + hex(item)[2::].rjust(2, '0'), end=', ')
    print(end)
*/
// clang-format on

static void test_sm2_bn_cmp()
{
    // clang-format off
/*
num = 4
print(f"static int num = {num};")
for i in range(num):
    a = randint(0, UINT256_MAX)
    b = randint(0, UINT256_MAX)
    dump_int(f"static uint8_t a_{i}[32]" + " ={", a, "};")
    dump_int(f"static uint8_t b_{i}[32]" + " ={", b, "};")
    if a < b:
        cmp = -1
    elif a == b:
        cmp = 0
    else:
        cmp = 1
    print(f"static int cmp_{i} = {cmp};")
print(f"static const uint8_t* a[{num}]" + " = {", ','.join([f"a_{i}" for i in range(num)]), "};")
print(f"static const uint8_t* b[{num}]" + " = {", ','.join([f"b_{i}" for i in range(num)]), "};")
print(f"static const int cmp[{num}]" + " = {", ','.join([f"cmp_{i}" for i in range(num)]), "};")
*/
    static int num = 4;
    static uint8_t a_0[32] ={0x52, 0xe3, 0x55, 0xfb, 0x4c, 0x79, 0x45, 0xc2, 0x4f, 0xf0, 0x16, 0xf9, 0xa7, 0x47, 0x13, 0xf6, 0x49, 0x34, 0x0b, 0x24, 0x1e, 0xdb, 0x70, 0xd0, 0x68, 0x66, 0x33, 0x63, 0xad, 0x64, 0x70, 0x15, };
    static uint8_t b_0[32] ={0x39, 0x78, 0x24, 0x76, 0x14, 0xa3, 0x39, 0x84, 0x6f, 0x29, 0x9b, 0x3c, 0x0c, 0x93, 0x06, 0xdb, 0x11, 0x47, 0x71, 0xff, 0x6b, 0xae, 0x59, 0x4f, 0xe9, 0x50, 0x53, 0xd4, 0xd4, 0x62, 0x79, 0x25, };
    static int cmp_0 = 1;
    static uint8_t a_1[32] ={0xe0, 0x90, 0x70, 0x54, 0x6e, 0xcb, 0x0d, 0x25, 0x13, 0xb0, 0x9d, 0x81, 0x51, 0x1a, 0x8d, 0x0d, 0xe7, 0x61, 0x35, 0x86, 0x37, 0x2f, 0xa4, 0x23, 0xfb, 0x51, 0xd2, 0x84, 0xf7, 0x9d, 0xf6, 0x45, };
    static uint8_t b_1[32] ={0xf5, 0x02, 0xb0, 0x3b, 0xae, 0x47, 0xd8, 0xad, 0xb2, 0xb2, 0xcc, 0x0b, 0xec, 0x92, 0x84, 0x0f, 0x0c, 0x18, 0xcc, 0xd8, 0x7c, 0x16, 0x16, 0x9a, 0x80, 0xc3, 0x20, 0x34, 0xa8, 0x68, 0x60, 0x08, };
    static int cmp_1 = -1;
    static uint8_t a_2[32] ={0xb1, 0x2f, 0x78, 0x07, 0x0f, 0x28, 0xfb, 0x62, 0x82, 0x7f, 0x13, 0x36, 0xec, 0x28, 0x5d, 0xca, 0x9e, 0xcf, 0xcb, 0x38, 0xc5, 0xf2, 0xd7, 0x2c, 0xc3, 0xe7, 0xb8, 0xf3, 0x71, 0x9e, 0x31, 0x2c, };
    static uint8_t b_2[32] ={0xd0, 0x2c, 0xcf, 0x56, 0x32, 0xef, 0x4a, 0xf2, 0x5f, 0x5a, 0x8d, 0x6d, 0xf6, 0x3b, 0xdb, 0x1e, 0xb5, 0x18, 0x35, 0x88, 0xea, 0x2c, 0x76, 0xd1, 0x07, 0x36, 0x7c, 0x4f, 0x42, 0x91, 0x3b, 0xe0, };
    static int cmp_2 = -1;
    static uint8_t a_3[32] ={0x7a, 0x08, 0x7d, 0xc9, 0x33, 0x48, 0x3a, 0x44, 0x30, 0x8c, 0x21, 0xf8, 0x0e, 0x77, 0x6b, 0x76, 0x2b, 0xf9, 0xb8, 0x4c, 0x52, 0xa2, 0x5c, 0xb0, 0x55, 0x05, 0x6a, 0x20, 0xac, 0x1c, 0xd5, 0xc2, };
    static uint8_t b_3[32] ={0xb9, 0x5b, 0x5b, 0xac, 0x41, 0x0a, 0x05, 0x89, 0xcc, 0xb4, 0xde, 0xb4, 0x28, 0xb1, 0x3b, 0x7a, 0x4d, 0xd6, 0x56, 0x7b, 0x9d, 0x44, 0x3e, 0xcc, 0x67, 0x4c, 0xd3, 0x3f, 0xf7, 0x80, 0x7a, 0x8b, };
    static int cmp_3 = -1;
    static const uint8_t* a[4] = { a_0,a_1,a_2,a_3 };
    static const uint8_t* b[4] = { b_0,b_1,b_2,b_3 };
    static const int cmp[4] = { cmp_0,cmp_1,cmp_2,cmp_3 };
    // clang-format on
    for (int i = 0; i < num; i++)
    {
        sm2_bn_t x, y;
        sm2_bn_from_bytes(x, a[i]);
        sm2_bn_from_bytes(y, b[i]);
        if (sm2_bn_cmp(x, y) != cmp[i])
        {
            fprintf(stderr, "err %s, file: %s, line: %d\n", __FUNCTION__,
                    __FILE__, __LINE__);
            exit(-1);
        }
    }
}

static void test_sm2_bn_add_uint32()
{
    // clang-format off
/*
num = 4
print(f"static int num = {num};")
for i in range(num):
    a = randint(0, UINT256_MAX)
    b = randint(0, (1 << 32) - 1)
    c = a + b
    dump_int(f"static uint8_t a_{i}[32]" + " ={", a, "};")
    print(f"static uint32_t b_{i} = {hex(b)};")
    dump_int(f"static uint8_t c_{i}[32]" + " ={", c, "};")
print(f"static const uint8_t* a[{num}]" + " = {", ','.join([f"a_{i}" for i in range(num)]), "};")
print(f"static const uint8_t* c[{num}]" + " = {", ','.join([f"c_{i}" for i in range(num)]), "};")
print(f"static const uint32_t b[{num}]" + " = {", ','.join([f"b_{i}" for i in range(num)]), "};")
*/
    static int num = 4;
    static uint8_t a_0[32] ={0x3f, 0x10, 0xc4, 0x43, 0x89, 0xcc, 0xcb, 0x22, 0xf0, 0x3d, 0x7c, 0x52, 0x0a, 0xff, 0x7a, 0xd8, 0xe1, 0x11, 0xb7, 0xde, 0xff, 0xa4, 0xde, 0x18, 0x7c, 0xac, 0x23, 0xcf, 0xcf, 0x7b, 0xda, 0x58, };
    static uint32_t b_0 = 0xcc2270de;
    static uint8_t c_0[32] ={0x3f, 0x10, 0xc4, 0x43, 0x89, 0xcc, 0xcb, 0x22, 0xf0, 0x3d, 0x7c, 0x52, 0x0a, 0xff, 0x7a, 0xd8, 0xe1, 0x11, 0xb7, 0xde, 0xff, 0xa4, 0xde, 0x18, 0x7c, 0xac, 0x23, 0xd0, 0x9b, 0x9e, 0x4b, 0x36, };
    static uint8_t a_1[32] ={0xb8, 0xe3, 0x1a, 0xdd, 0x80, 0x94, 0xad, 0xab, 0xa2, 0xf8, 0x73, 0x74, 0xce, 0x74, 0x9a, 0x2a, 0x62, 0x5c, 0xb8, 0xc6, 0x27, 0x17, 0x08, 0x4b, 0x45, 0x0b, 0xb2, 0x55, 0x31, 0xc4, 0x05, 0x1a, };
    static uint32_t b_1 = 0xdfa9aedb;
    static uint8_t c_1[32] ={0xb8, 0xe3, 0x1a, 0xdd, 0x80, 0x94, 0xad, 0xab, 0xa2, 0xf8, 0x73, 0x74, 0xce, 0x74, 0x9a, 0x2a, 0x62, 0x5c, 0xb8, 0xc6, 0x27, 0x17, 0x08, 0x4b, 0x45, 0x0b, 0xb2, 0x56, 0x11, 0x6d, 0xb3, 0xf5, };
    static uint8_t a_2[32] ={0x43, 0xc0, 0x34, 0x75, 0x63, 0x03, 0xcf, 0xb2, 0xe8, 0x29, 0x9a, 0xc4, 0xa9, 0x76, 0x93, 0xfa, 0xf3, 0x10, 0xff, 0xa7, 0x10, 0x49, 0x6a, 0xde, 0x0e, 0xc0, 0x3d, 0x35, 0x0c, 0x1f, 0x2c, 0x9c, };
    static uint32_t b_2 = 0x5b6a78e3;
    static uint8_t c_2[32] ={0x43, 0xc0, 0x34, 0x75, 0x63, 0x03, 0xcf, 0xb2, 0xe8, 0x29, 0x9a, 0xc4, 0xa9, 0x76, 0x93, 0xfa, 0xf3, 0x10, 0xff, 0xa7, 0x10, 0x49, 0x6a, 0xde, 0x0e, 0xc0, 0x3d, 0x35, 0x67, 0x89, 0xa5, 0x7f, };
    static uint8_t a_3[32] ={0x72, 0x93, 0x7f, 0xaa, 0xf5, 0x6f, 0x7b, 0x57, 0xd2, 0xec, 0xff, 0xa8, 0xcd, 0x11, 0x8a, 0x33, 0xa1, 0x0d, 0xe5, 0x30, 0x88, 0x3b, 0x22, 0xe0, 0xcd, 0x34, 0xac, 0xee, 0x1f, 0x7e, 0xda, 0xc9, };
    static uint32_t b_3 = 0x4e10023d;
    static uint8_t c_3[32] ={0x72, 0x93, 0x7f, 0xaa, 0xf5, 0x6f, 0x7b, 0x57, 0xd2, 0xec, 0xff, 0xa8, 0xcd, 0x11, 0x8a, 0x33, 0xa1, 0x0d, 0xe5, 0x30, 0x88, 0x3b, 0x22, 0xe0, 0xcd, 0x34, 0xac, 0xee, 0x6d, 0x8e, 0xdd, 0x06, };
    static const uint8_t* a[4] = { a_0,a_1,a_2,a_3 };
    static const uint8_t* c[4] = { c_0,c_1,c_2,c_3 };
    static const uint32_t b[4] = { b_0,b_1,b_2,b_3 };
    // clang-format on
    for (int i = 0; i < num; i++)
    {
        sm2_bn_t x, z;
        uint8_t  buf[32];
        sm2_bn_from_bytes(x, a[i]);
        sm2_bn_add_uint32(z, x, b[i]);
        sm2_bn_to_bytes(buf, z);
        if (memcmp(c[i], buf, 32) != 0)
        {
            fprintf(stderr, "err %s, file: %s, line: %d\n", __FUNCTION__,
                    __FILE__, __LINE__);
            exit(-1);
        }
    }
}

static void test_sm2_bn_mod_n_sub2()
{
    // clang-format off
/*
num = 4
print(f"static int num = {num};")
for i in range(num):
    a = randint(0, UINT256_MAX - sm2n) + sm2n
    c = a % (sm2n - 2)
    dump_int(f"static uint8_t a_{i}[32]" + " ={", a, "};")
    dump_int(f"static uint8_t c_{i}[32]" + " ={", c, "};")
print(f"static const uint8_t* a[{num}]" + " = {", ','.join([f"a_{i}" for i in range(num)]), "};")
print(f"static const uint8_t* c[{num}]" + " = {", ','.join([f"c_{i}" for i in range(num)]), "};")
*/
    static int num = 4;
    static uint8_t a_0[32] ={0xff, 0xff, 0xff, 0xff, 0x33, 0x94, 0x58, 0x26, 0x55, 0x5e, 0x01, 0xf7, 0xbc, 0xc1, 0x12, 0xb6, 0x47, 0x5d, 0xe9, 0x66, 0x41, 0x8b, 0xd6, 0xbe, 0x45, 0x5a, 0x1d, 0x8b, 0x7e, 0x77, 0xb3, 0xdb, };
    static uint8_t c_0[32] ={0x00, 0x00, 0x00, 0x00, 0x33, 0x94, 0x58, 0x26, 0x55, 0x5e, 0x01, 0xf7, 0xbc, 0xc1, 0x12, 0xb6, 0xd5, 0x5a, 0x09, 0xfb, 0x1f, 0xc5, 0xd1, 0x92, 0xf1, 0x9e, 0x29, 0x82, 0x44, 0xa2, 0x72, 0xba, };
    static uint8_t a_1[32] ={0xff, 0xff, 0xff, 0xff, 0xdf, 0x34, 0xb7, 0x8a, 0xf8, 0x9a, 0x54, 0x64, 0x0f, 0x9c, 0xea, 0xe1, 0x6c, 0xf3, 0x91, 0xb8, 0x9f, 0xa7, 0x88, 0x1e, 0xe2, 0x2c, 0xcc, 0x95, 0xc0, 0x8f, 0xe6, 0xbb, };
    static uint8_t c_1[32] ={0x00, 0x00, 0x00, 0x00, 0xdf, 0x34, 0xb7, 0x8a, 0xf8, 0x9a, 0x54, 0x64, 0x0f, 0x9c, 0xea, 0xe1, 0xfa, 0xef, 0xb2, 0x4d, 0x7d, 0xe1, 0x82, 0xf3, 0x8e, 0x70, 0xd8, 0x8c, 0x86, 0xba, 0xa5, 0x9a, };
    static uint8_t a_2[32] ={0xff, 0xff, 0xff, 0xff, 0x88, 0x44, 0x77, 0x54, 0xfa, 0x56, 0xf1, 0x65, 0x1a, 0x38, 0x2a, 0xe5, 0xf3, 0x7a, 0xfd, 0x7e, 0x10, 0x54, 0x16, 0x7e, 0x53, 0xa3, 0x65, 0xc0, 0x4e, 0x10, 0x52, 0x60, };
    static uint8_t c_2[32] ={0x00, 0x00, 0x00, 0x00, 0x88, 0x44, 0x77, 0x54, 0xfa, 0x56, 0xf1, 0x65, 0x1a, 0x38, 0x2a, 0xe6, 0x81, 0x77, 0x1e, 0x12, 0xee, 0x8e, 0x11, 0x52, 0xff, 0xe7, 0x71, 0xb7, 0x14, 0x3b, 0x11, 0x3f, };
    static uint8_t a_3[32] ={0xff, 0xff, 0xff, 0xff, 0xd9, 0x63, 0xcf, 0xd1, 0xf6, 0xfa, 0x7a, 0x3d, 0x85, 0x69, 0x46, 0xac, 0x86, 0x0e, 0x9b, 0x37, 0x2d, 0xd5, 0x4a, 0xa1, 0xc9, 0xff, 0xa8, 0xb4, 0x45, 0x13, 0x7a, 0x53, };
    static uint8_t c_3[32] ={0x00, 0x00, 0x00, 0x00, 0xd9, 0x63, 0xcf, 0xd1, 0xf6, 0xfa, 0x7a, 0x3d, 0x85, 0x69, 0x46, 0xad, 0x14, 0x0a, 0xbb, 0xcc, 0x0c, 0x0f, 0x45, 0x76, 0x76, 0x43, 0xb4, 0xab, 0x0b, 0x3e, 0x39, 0x32, };
    static const uint8_t* a[4] = { a_0,a_1,a_2,a_3 };
    static const uint8_t* c[4] = { c_0,c_1,c_2,c_3 };
    // clang-format on
    for (int i = 0; i < num; i++)
    {
        sm2_bn_t x;
        uint8_t  buf[32];
        sm2_bn_from_bytes(x, a[i]);
        sm2_bn_mod_n_sub2(x);
        sm2_bn_to_bytes(buf, x);
        if (memcmp(c[i], buf, 32) != 0)
        {
            fprintf(stderr, "err %s, file: %s, line: %d\n", __FUNCTION__,
                    __FILE__, __LINE__);
            exit(-1);
        }
    }
}

static void test_sm2_bn_mod_n_sub3()
{
    // clang-format off
/*
num = 4
print(f"static int num = {num};")
for i in range(num):
    a = randint(0, UINT256_MAX - sm2n) + sm2n
    c = a % (sm2n - 3)
    dump_int(f"static uint8_t a_{i}[32]" + " ={", a, "};")
    dump_int(f"static uint8_t c_{i}[32]" + " ={", c, "};")
print(f"static const uint8_t* a[{num}]" + " = {", ','.join([f"a_{i}" for i in range(num)]), "};")
print(f"static const uint8_t* c[{num}]" + " = {", ','.join([f"c_{i}" for i in range(num)]), "};")
*/
    static int num = 4;
    static uint8_t a_0[32] ={0xff, 0xff, 0xff, 0xff, 0xc0, 0x3c, 0x2a, 0xbd, 0xdd, 0xa7, 0xf6, 0xb0, 0x33, 0x19, 0x22, 0x76, 0x5d, 0x67, 0x0c, 0xd7, 0x2d, 0xbb, 0xfe, 0x1a, 0xcc, 0x09, 0xcb, 0xf5, 0x67, 0xcc, 0xa7, 0x54, };
    static uint8_t c_0[32] ={0x00, 0x00, 0x00, 0x00, 0xc0, 0x3c, 0x2a, 0xbd, 0xdd, 0xa7, 0xf6, 0xb0, 0x33, 0x19, 0x22, 0x76, 0xeb, 0x63, 0x2d, 0x6c, 0x0b, 0xf5, 0xf8, 0xef, 0x78, 0x4d, 0xd7, 0xec, 0x2d, 0xf7, 0x66, 0x34, };
    static uint8_t a_1[32] ={0xff, 0xff, 0xff, 0xff, 0xca, 0x56, 0x1c, 0x63, 0x9e, 0xf1, 0xcf, 0x4d, 0x88, 0xf7, 0x1b, 0xbc, 0x22, 0x76, 0x9f, 0xca, 0xde, 0xc4, 0x5d, 0xe5, 0x5d, 0x1a, 0x20, 0x04, 0x93, 0x64, 0x37, 0xae, };
    static uint8_t c_1[32] ={0x00, 0x00, 0x00, 0x00, 0xca, 0x56, 0x1c, 0x63, 0x9e, 0xf1, 0xcf, 0x4d, 0x88, 0xf7, 0x1b, 0xbc, 0xb0, 0x72, 0xc0, 0x5f, 0xbc, 0xfe, 0x58, 0xba, 0x09, 0x5e, 0x2b, 0xfb, 0x59, 0x8e, 0xf6, 0x8e, };
    static uint8_t a_2[32] ={0xff, 0xff, 0xff, 0xff, 0xeb, 0x3d, 0x96, 0x1c, 0x4e, 0x82, 0x37, 0x49, 0xf5, 0x8e, 0xbd, 0xb2, 0x34, 0x8f, 0x21, 0xdd, 0xaa, 0xdc, 0x6b, 0x07, 0x5f, 0xc8, 0x21, 0xa4, 0x8d, 0xd2, 0xa4, 0xc7, };
    static uint8_t c_2[32] ={0x00, 0x00, 0x00, 0x00, 0xeb, 0x3d, 0x96, 0x1c, 0x4e, 0x82, 0x37, 0x49, 0xf5, 0x8e, 0xbd, 0xb2, 0xc2, 0x8b, 0x42, 0x72, 0x89, 0x16, 0x65, 0xdc, 0x0c, 0x0c, 0x2d, 0x9b, 0x53, 0xfd, 0x63, 0xa7, };
    static uint8_t a_3[32] ={0xff, 0xff, 0xff, 0xff, 0xe4, 0xd9, 0x79, 0x88, 0x0d, 0xb2, 0x53, 0x03, 0x2c, 0xf4, 0x86, 0x97, 0x0b, 0x38, 0xa5, 0xa9, 0x42, 0x9f, 0xc2, 0x63, 0x91, 0x15, 0xa3, 0x29, 0x86, 0x15, 0x23, 0x96, };
    static uint8_t c_3[32] ={0x00, 0x00, 0x00, 0x00, 0xe4, 0xd9, 0x79, 0x88, 0x0d, 0xb2, 0x53, 0x03, 0x2c, 0xf4, 0x86, 0x97, 0x99, 0x34, 0xc6, 0x3e, 0x20, 0xd9, 0xbd, 0x38, 0x3d, 0x59, 0xaf, 0x20, 0x4c, 0x3f, 0xe2, 0x76, };
    static const uint8_t* a[4] = { a_0,a_1,a_2,a_3 };
    static const uint8_t* c[4] = { c_0,c_1,c_2,c_3 };
    // clang-format on
    for (int i = 0; i < num; i++)
    {
        sm2_bn_t x;
        uint8_t  buf[32];
        sm2_bn_from_bytes(x, a[i]);
        sm2_bn_mod_n_sub3(x);
        sm2_bn_to_bytes(buf, x);
        if (memcmp(c[i], buf, 32) != 0)
        {
            fprintf(stderr, "err %s, file: %s, line: %d\n", __FUNCTION__,
                    __FILE__, __LINE__);
            exit(-1);
        }
    }
}

static void test_sm2_fp_add()
{
    // clang-format off
/*
num = 4
print(f"static int num = {num};")
for i in range(num):
    a = randint(0, sm2p - 1)
    b = randint(0, sm2p - 1)
    c = (a + b) % sm2p
    dump_int(f"static uint8_t a_{i}[32]" + " ={", a, "};")
    dump_int(f"static uint8_t b_{i}[32]" + " ={", b, "};")
    dump_int(f"static uint8_t c_{i}[32]" + " ={", c, "};")
print(f"static const uint8_t* a[{num}]" + " = {", ','.join([f"a_{i}" for i in range(num)]), "};")
print(f"static const uint8_t* b[{num}]" + " = {", ','.join([f"b_{i}" for i in range(num)]), "};")
print(f"static const uint8_t* c[{num}]" + " = {", ','.join([f"c_{i}" for i in range(num)]), "};")
*/
    static int num = 4;
    static uint8_t a_0[32] ={0x51, 0xdf, 0xee, 0x90, 0x69, 0x74, 0x3f, 0x5d, 0xa9, 0x46, 0x8d, 0x95, 0xa2, 0x1d, 0xd0, 0x31, 0x77, 0xc1, 0x9b, 0xf9, 0xc0, 0x64, 0x5a, 0x6a, 0x58, 0x75, 0x41, 0x36, 0x52, 0x39, 0x7b, 0xea, };
    static uint8_t b_0[32] ={0x44, 0x4e, 0x92, 0x61, 0x54, 0x8b, 0xb7, 0x55, 0xe8, 0x16, 0x70, 0xfa, 0x25, 0x7f, 0x8a, 0x61, 0x45, 0xaf, 0x33, 0x0b, 0x21, 0xd7, 0x19, 0x15, 0x30, 0x06, 0xd1, 0xcc, 0x92, 0x25, 0xb0, 0x74, };
    static uint8_t c_0[32] ={0x96, 0x2e, 0x80, 0xf1, 0xbd, 0xff, 0xf6, 0xb3, 0x91, 0x5c, 0xfe, 0x8f, 0xc7, 0x9d, 0x5a, 0x92, 0xbd, 0x70, 0xcf, 0x04, 0xe2, 0x3b, 0x73, 0x7f, 0x88, 0x7c, 0x13, 0x02, 0xe4, 0x5f, 0x2c, 0x5e, };
    static uint8_t a_1[32] ={0x48, 0x1a, 0xc2, 0xa7, 0x75, 0xb6, 0x89, 0x9e, 0x7a, 0xd6, 0x85, 0x9b, 0xa7, 0x91, 0xf1, 0x6a, 0xfb, 0x69, 0xc3, 0xfb, 0x7d, 0x27, 0x33, 0x2e, 0x2b, 0x22, 0xd2, 0x62, 0x56, 0x53, 0xa3, 0x70, };
    static uint8_t b_1[32] ={0x43, 0x7e, 0x01, 0xed, 0x05, 0x67, 0x2b, 0x3b, 0x94, 0xc0, 0xc3, 0x2c, 0x8b, 0x35, 0xfd, 0x3b, 0x28, 0x9f, 0x6f, 0x7b, 0x21, 0xbf, 0xad, 0x00, 0xfe, 0x56, 0x4e, 0x25, 0x91, 0x9d, 0xb7, 0xfb, };
    static uint8_t c_1[32] ={0x8b, 0x98, 0xc4, 0x94, 0x7b, 0x1d, 0xb4, 0xda, 0x0f, 0x97, 0x48, 0xc8, 0x32, 0xc7, 0xee, 0xa6, 0x24, 0x09, 0x33, 0x76, 0x9e, 0xe6, 0xe0, 0x2f, 0x29, 0x79, 0x20, 0x87, 0xe7, 0xf1, 0x5b, 0x6b, };
    static uint8_t a_2[32] ={0x9b, 0xe5, 0xdf, 0xe5, 0xe6, 0x71, 0x0e, 0x89, 0x15, 0x1c, 0x24, 0xd3, 0x86, 0x94, 0x59, 0xb1, 0x1a, 0x68, 0x9b, 0xe5, 0x7e, 0xb0, 0xe5, 0x40, 0x0c, 0x5b, 0x3d, 0xa3, 0xb3, 0xde, 0xce, 0xe2, };
    static uint8_t b_2[32] ={0xd5, 0xe8, 0x73, 0x07, 0xed, 0xcf, 0x76, 0x7d, 0x81, 0x4e, 0x16, 0x55, 0xb4, 0x37, 0x6a, 0xa7, 0xa7, 0x04, 0xd3, 0xe2, 0x48, 0x9b, 0x8d, 0x49, 0xa3, 0x0b, 0xe2, 0xa4, 0x5b, 0xb8, 0x88, 0xdb, };
    static uint8_t c_2[32] ={0x71, 0xce, 0x52, 0xee, 0xd4, 0x40, 0x85, 0x06, 0x96, 0x6a, 0x3b, 0x29, 0x3a, 0xcb, 0xc4, 0x58, 0xc1, 0x6d, 0x6f, 0xc8, 0xc7, 0x4c, 0x72, 0x88, 0xaf, 0x67, 0x20, 0x48, 0x0f, 0x97, 0x57, 0xbe, };
    static uint8_t a_3[32] ={0x83, 0x30, 0xe3, 0x43, 0x0b, 0x12, 0xf9, 0x40, 0xba, 0x01, 0xae, 0xba, 0x2a, 0xf3, 0x6a, 0xd0, 0x2a, 0x56, 0xed, 0x7e, 0xda, 0xf7, 0x89, 0xc8, 0x1c, 0xcd, 0xbe, 0x1a, 0x10, 0x1d, 0xfb, 0x66, };
    static uint8_t b_3[32] ={0x77, 0x88, 0x98, 0xb5, 0x7a, 0xd4, 0x5b, 0xb7, 0x61, 0xca, 0x72, 0x38, 0x52, 0xe4, 0xf8, 0x66, 0x4b, 0x3a, 0x11, 0xed, 0x96, 0x22, 0xc0, 0x60, 0x34, 0x1b, 0xff, 0x38, 0x6f, 0x33, 0xf7, 0x93, };
    static uint8_t c_3[32] ={0xfa, 0xb9, 0x7b, 0xf8, 0x85, 0xe7, 0x54, 0xf8, 0x1b, 0xcc, 0x20, 0xf2, 0x7d, 0xd8, 0x63, 0x36, 0x75, 0x90, 0xff, 0x6c, 0x71, 0x1a, 0x4a, 0x28, 0x50, 0xe9, 0xbd, 0x52, 0x7f, 0x51, 0xf2, 0xf9, };
    static const uint8_t* a[4] = { a_0,a_1,a_2,a_3 };
    static const uint8_t* b[4] = { b_0,b_1,b_2,b_3 };
    static const uint8_t* c[4] = { c_0,c_1,c_2,c_3 };
    // clang-format on
    for (int i = 0; i < num; i++)
    {
        sm2_fp_t x, y, z;
        uint8_t  buf[32];
        sm2_fp_from_bytes(x, a[i]);
        sm2_fp_from_bytes(y, b[i]);
        sm2_fp_add(z, x, y);
        sm2_fp_to_bytes(buf, z);
        if (memcmp(c[i], buf, 32) != 0)
        {
            fprintf(stderr, "err %s, file: %s, line: %d\n", __FUNCTION__,
                    __FILE__, __LINE__);
            exit(-1);
        }
    }
}

static void test_sm2_fp_dbl()
{
    // clang-format off
/*
num = 4
print(f"static int num = {num};")
for i in range(num):
    a = randint(0, sm2p - 1)
    c = (a + a) % sm2p
    dump_int(f"static uint8_t a_{i}[32]" + " ={", a, "};")
    dump_int(f"static uint8_t c_{i}[32]" + " ={", c, "};")
print(f"static const uint8_t* a[{num}]" + " = {", ','.join([f"a_{i}" for i in range(num)]), "};")
print(f"static const uint8_t* c[{num}]" + " = {", ','.join([f"c_{i}" for i in range(num)]), "};")
*/
    static int num = 4;
    static uint8_t a_0[32] ={0xdb, 0xae, 0x56, 0x69, 0xad, 0xc1, 0xf8, 0x4f, 0x31, 0x9f, 0x81, 0xe3, 0xb4, 0x01, 0x0e, 0x82, 0xb5, 0x78, 0xeb, 0x37, 0x68, 0x86, 0x76, 0xcd, 0x0f, 0x9e, 0x5f, 0xe9, 0x0b, 0x7f, 0x53, 0x97, };
    static uint8_t c_0[32] ={0xb7, 0x5c, 0xac, 0xd4, 0x5b, 0x83, 0xf0, 0x9e, 0x63, 0x3f, 0x03, 0xc7, 0x68, 0x02, 0x1d, 0x05, 0x6a, 0xf1, 0xd6, 0x6f, 0xd1, 0x0c, 0xed, 0x99, 0x1f, 0x3c, 0xbf, 0xd2, 0x16, 0xfe, 0xa7, 0x2f, };
    static uint8_t a_1[32] ={0xc1, 0x40, 0x8c, 0xed, 0x63, 0x75, 0xe6, 0xf5, 0x48, 0x4c, 0x90, 0xb2, 0x05, 0xac, 0xac, 0x37, 0x42, 0x41, 0x5d, 0x1c, 0x36, 0x60, 0x5a, 0xf7, 0x78, 0xdf, 0xe4, 0x9a, 0xac, 0x9d, 0xc5, 0x60, };
    static uint8_t c_1[32] ={0x82, 0x81, 0x19, 0xdb, 0xc6, 0xeb, 0xcd, 0xea, 0x90, 0x99, 0x21, 0x64, 0x0b, 0x59, 0x58, 0x6e, 0x84, 0x82, 0xba, 0x39, 0x6c, 0xc0, 0xb5, 0xed, 0xf1, 0xbf, 0xc9, 0x35, 0x59, 0x3b, 0x8a, 0xc1, };
    static uint8_t a_2[32] ={0xc4, 0x79, 0x56, 0xfe, 0xfb, 0x36, 0x84, 0x97, 0x91, 0xaf, 0xc2, 0x18, 0x8b, 0xf2, 0xf2, 0x71, 0xa9, 0x17, 0x8b, 0x56, 0x02, 0x9d, 0xaf, 0x50, 0x51, 0x69, 0x29, 0xce, 0xf0, 0x53, 0x0b, 0x8c, };
    static uint8_t c_2[32] ={0x88, 0xf2, 0xad, 0xfe, 0xf6, 0x6d, 0x09, 0x2f, 0x23, 0x5f, 0x84, 0x31, 0x17, 0xe5, 0xe4, 0xe3, 0x52, 0x2f, 0x16, 0xad, 0x05, 0x3b, 0x5e, 0x9f, 0xa2, 0xd2, 0x53, 0x9d, 0xe0, 0xa6, 0x17, 0x19, };
    static uint8_t a_3[32] ={0x35, 0x62, 0x31, 0xeb, 0x2d, 0xcc, 0x30, 0xb8, 0x44, 0x64, 0xb8, 0xfe, 0xd8, 0xfe, 0xde, 0xd4, 0xd6, 0xd6, 0xf9, 0x14, 0xa6, 0xf5, 0x0a, 0xa8, 0x85, 0x48, 0xd4, 0xe4, 0xea, 0x24, 0x19, 0x46, };
    static uint8_t c_3[32] ={0x6a, 0xc4, 0x63, 0xd6, 0x5b, 0x98, 0x61, 0x70, 0x88, 0xc9, 0x71, 0xfd, 0xb1, 0xfd, 0xbd, 0xa9, 0xad, 0xad, 0xf2, 0x29, 0x4d, 0xea, 0x15, 0x51, 0x0a, 0x91, 0xa9, 0xc9, 0xd4, 0x48, 0x32, 0x8c, };
    static const uint8_t* a[4] = { a_0,a_1,a_2,a_3 };
    static const uint8_t* c[4] = { c_0,c_1,c_2,c_3 };
    // clang-format on
    for (int i = 0; i < num; i++)
    {
        sm2_fp_t x, z;
        uint8_t  buf[32];
        sm2_fp_from_bytes(x, a[i]);
        sm2_fp_dbl(z, x);
        sm2_fp_to_bytes(buf, z);
        if (memcmp(c[i], buf, 32) != 0)
        {
            fprintf(stderr, "err %s, file: %s, line: %d\n", __FUNCTION__,
                    __FILE__, __LINE__);
            exit(-1);
        }
    }
}

static void test_sm2_fp_tpl()
{
    // clang-format off
/*
num = 4
print(f"static int num = {num};")
for i in range(num):
    a = randint(0, sm2p - 1)
    c = (a + a + a) % sm2p
    dump_int(f"static uint8_t a_{i}[32]" + " ={", a, "};")
    dump_int(f"static uint8_t c_{i}[32]" + " ={", c, "};")
print(f"static const uint8_t* a[{num}]" + " = {", ','.join([f"a_{i}" for i in range(num)]), "};")
print(f"static const uint8_t* c[{num}]" + " = {", ','.join([f"c_{i}" for i in range(num)]), "};")
*/
    static int num = 4;
    static uint8_t a_0[32] ={0x64, 0x16, 0x9b, 0x62, 0x05, 0x19, 0xce, 0x6b, 0x94, 0xfb, 0x54, 0x7d, 0x00, 0xd0, 0xca, 0x3a, 0x67, 0xd8, 0xd6, 0x17, 0xa7, 0xff, 0x3d, 0xfa, 0x16, 0x19, 0x31, 0xda, 0x87, 0x22, 0xfe, 0x8b, };
    static uint8_t c_0[32] ={0x2c, 0x43, 0xd2, 0x27, 0x0f, 0x4d, 0x6b, 0x42, 0xbe, 0xf1, 0xfd, 0x77, 0x02, 0x72, 0x5e, 0xaf, 0x37, 0x8a, 0x82, 0x47, 0xf7, 0xfd, 0xb9, 0xed, 0x42, 0x4b, 0x95, 0x8f, 0x95, 0x68, 0xfb, 0xa2, };
    static uint8_t a_1[32] ={0x97, 0xeb, 0x30, 0xa5, 0xb5, 0xbc, 0x9f, 0x0a, 0x54, 0x6d, 0x76, 0x02, 0xbb, 0x85, 0xd2, 0xab, 0x84, 0xec, 0xb5, 0xa3, 0xd6, 0xab, 0x22, 0x13, 0xa6, 0x98, 0xb6, 0x1a, 0xc0, 0xd3, 0xe8, 0x02, };
    static uint8_t c_1[32] ={0xc7, 0xc1, 0x91, 0xf2, 0x21, 0x35, 0xdd, 0x1e, 0xfd, 0x48, 0x62, 0x08, 0x32, 0x91, 0x78, 0x02, 0x8e, 0xc6, 0x20, 0xec, 0x84, 0x01, 0x66, 0x39, 0xf3, 0xca, 0x22, 0x50, 0x42, 0x7b, 0xb8, 0x07, };
    static uint8_t a_2[32] ={0xed, 0xf4, 0xf5, 0x6d, 0xa5, 0xb0, 0x3b, 0xd0, 0x01, 0x6d, 0xd8, 0xef, 0x3e, 0x23, 0xe2, 0x71, 0xf6, 0x40, 0x02, 0xad, 0x2a, 0xfa, 0x7e, 0xcf, 0x0e, 0xd3, 0x0c, 0xe4, 0x30, 0x87, 0xa2, 0x7a, };
    static uint8_t c_2[32] ={0xc9, 0xde, 0xe0, 0x4a, 0xf1, 0x10, 0xb3, 0x70, 0x04, 0x49, 0x8a, 0xcd, 0xba, 0x6b, 0xa7, 0x55, 0xe2, 0xc0, 0x08, 0x09, 0x80, 0xef, 0x7c, 0x6b, 0x2c, 0x79, 0x26, 0xac, 0x91, 0x96, 0xe7, 0x70, };
    static uint8_t a_3[32] ={0x7a, 0x69, 0x2f, 0x93, 0x9b, 0xe2, 0x30, 0x97, 0xe9, 0xc7, 0xcb, 0xa2, 0xc1, 0x64, 0x7e, 0xf4, 0xd2, 0xa7, 0x9a, 0xd9, 0x12, 0xa1, 0xab, 0xcf, 0x2e, 0xe0, 0x5c, 0xea, 0x43, 0xab, 0x67, 0xa1, };
    static uint8_t c_3[32] ={0x6f, 0x3b, 0x8e, 0xbb, 0xd3, 0xa6, 0x91, 0xc7, 0xbd, 0x57, 0x62, 0xe8, 0x44, 0x2d, 0x7c, 0xde, 0x77, 0xf6, 0xd0, 0x8c, 0x37, 0xe5, 0x03, 0x6c, 0x8c, 0xa1, 0x16, 0xbe, 0xcb, 0x02, 0x36, 0xe4, };
    static const uint8_t* a[4] = { a_0,a_1,a_2,a_3 };
    static const uint8_t* c[4] = { c_0,c_1,c_2,c_3 };
    // clang-format on
    for (int i = 0; i < num; i++)
    {
        sm2_fp_t x, z;
        uint8_t  buf[32];
        sm2_fp_from_bytes(x, a[i]);
        sm2_fp_tpl(z, x);
        sm2_fp_to_bytes(buf, z);
        if (memcmp(c[i], buf, 32) != 0)
        {
            fprintf(stderr, "err %s, file: %s, line: %d\n", __FUNCTION__,
                    __FILE__, __LINE__);
            exit(-1);
        }
    }
}

static void test_sm2_fp_sub()
{
    // clang-format off
/*
num = 4
print(f"static int num = {num};")
for i in range(num):
    a = randint(0, sm2p - 1)
    b = randint(0, sm2p - 1)
    c = (a - b) % sm2p
    dump_int(f"static uint8_t a_{i}[32]" + " ={", a, "};")
    dump_int(f"static uint8_t b_{i}[32]" + " ={", b, "};")
    dump_int(f"static uint8_t c_{i}[32]" + " ={", c, "};")
print(f"static const uint8_t* a[{num}]" + " = {", ','.join([f"a_{i}" for i in range(num)]), "};")
print(f"static const uint8_t* b[{num}]" + " = {", ','.join([f"b_{i}" for i in range(num)]), "};")
print(f"static const uint8_t* c[{num}]" + " = {", ','.join([f"c_{i}" for i in range(num)]), "};")
*/
    static int num = 4;
    static uint8_t a_0[32] ={0x75, 0x9b, 0xc3, 0x34, 0x1e, 0x52, 0xcb, 0xae, 0x24, 0xf7, 0xf9, 0x9c, 0xf3, 0x7a, 0x90, 0xf7, 0x32, 0x98, 0x12, 0xbe, 0xf5, 0x7b, 0x4d, 0x0f, 0xfb, 0xe5, 0x47, 0x7b, 0x33, 0x5c, 0xfa, 0xb1, };
    static uint8_t b_0[32] ={0x9d, 0x27, 0x66, 0x52, 0x69, 0xe0, 0x1e, 0xd3, 0x5b, 0x24, 0x6e, 0x9f, 0x20, 0x4e, 0x4a, 0x70, 0xb0, 0x22, 0x97, 0xa5, 0xf6, 0xaf, 0x2f, 0x97, 0xb0, 0x98, 0xf0, 0xec, 0x3a, 0x59, 0x30, 0x3d, };
    static uint8_t c_0[32] ={0xd8, 0x74, 0x5c, 0xe0, 0xb4, 0x72, 0xac, 0xda, 0xc9, 0xd3, 0x8a, 0xfd, 0xd3, 0x2c, 0x46, 0x86, 0x82, 0x75, 0x7b, 0x17, 0xfe, 0xcc, 0x1d, 0x79, 0x4b, 0x4c, 0x56, 0x8e, 0xf9, 0x03, 0xca, 0x73, };
    static uint8_t a_1[32] ={0x3d, 0xb2, 0x9f, 0xd7, 0x30, 0x3a, 0xf6, 0xb8, 0x46, 0xe5, 0x5e, 0x43, 0x9d, 0x3e, 0x99, 0x7f, 0xa5, 0x14, 0xdc, 0xe3, 0x51, 0x58, 0x53, 0x2e, 0x7f, 0x98, 0xc3, 0xce, 0xcc, 0xd0, 0x50, 0x48, };
    static uint8_t b_1[32] ={0x26, 0xe0, 0x01, 0x76, 0x03, 0x94, 0xab, 0x31, 0xb5, 0x8e, 0xca, 0x21, 0xa4, 0x59, 0x4d, 0x6b, 0x31, 0x46, 0x33, 0x1f, 0x30, 0x44, 0xa8, 0xbe, 0xb3, 0xc8, 0x31, 0x37, 0x94, 0x20, 0x1d, 0xc8, };
    static uint8_t c_1[32] ={0x16, 0xd2, 0x9e, 0x61, 0x2c, 0xa6, 0x4b, 0x86, 0x91, 0x56, 0x94, 0x21, 0xf8, 0xe5, 0x4c, 0x14, 0x73, 0xce, 0xa9, 0xc4, 0x21, 0x13, 0xaa, 0x6f, 0xcb, 0xd0, 0x92, 0x97, 0x38, 0xb0, 0x32, 0x80, };
    static uint8_t a_2[32] ={0x94, 0x71, 0xee, 0x56, 0x98, 0x99, 0x2e, 0xcd, 0x8e, 0x6d, 0xa1, 0xec, 0x7d, 0x98, 0xb5, 0xa4, 0x76, 0xfb, 0x1a, 0x0c, 0x9a, 0xf7, 0x0d, 0xc4, 0xf5, 0x3e, 0x35, 0x5a, 0xb9, 0x12, 0x9c, 0xd2, };
    static uint8_t b_2[32] ={0xf2, 0x5f, 0x44, 0x2b, 0x74, 0x8e, 0x62, 0x33, 0xec, 0xd3, 0xc9, 0x1a, 0xb4, 0x51, 0xd5, 0x73, 0x90, 0x44, 0x92, 0x9d, 0x7a, 0xc0, 0x80, 0xca, 0x22, 0x4e, 0xa4, 0x2c, 0xda, 0x95, 0x8f, 0xfe, };
    static uint8_t c_2[32] ={0xa2, 0x12, 0xaa, 0x2a, 0x24, 0x0a, 0xcc, 0x99, 0xa1, 0x99, 0xd8, 0xd1, 0xc9, 0x46, 0xe0, 0x30, 0xe6, 0xb6, 0x87, 0x6e, 0x20, 0x36, 0x8c, 0xfb, 0xd2, 0xef, 0x91, 0x2d, 0xde, 0x7d, 0x0c, 0xd3, };
    static uint8_t a_3[32] ={0x92, 0x17, 0xc0, 0xce, 0xca, 0x9d, 0x58, 0x08, 0x91, 0x03, 0xec, 0xdf, 0xb5, 0xa4, 0x35, 0x1c, 0xfd, 0x87, 0x75, 0xb1, 0x84, 0x67, 0x6c, 0x3c, 0x36, 0xae, 0x1a, 0xe9, 0xe6, 0x81, 0x33, 0x92, };
    static uint8_t b_3[32] ={0x7b, 0x36, 0xf8, 0x24, 0xbb, 0xf3, 0xe1, 0x36, 0x5d, 0x21, 0xa5, 0x3b, 0x3a, 0x36, 0x43, 0x5d, 0x94, 0x19, 0x45, 0x3f, 0x31, 0xb2, 0x51, 0xf4, 0xb4, 0xfa, 0xea, 0xa3, 0x1a, 0x52, 0xb5, 0x2c, };
    static uint8_t c_3[32] ={0x16, 0xe0, 0xc8, 0xaa, 0x0e, 0xa9, 0x76, 0xd2, 0x33, 0xe2, 0x47, 0xa4, 0x7b, 0x6d, 0xf1, 0xbf, 0x69, 0x6e, 0x30, 0x72, 0x52, 0xb5, 0x1a, 0x47, 0x81, 0xb3, 0x30, 0x46, 0xcc, 0x2e, 0x7e, 0x66, };
    static const uint8_t* a[4] = { a_0,a_1,a_2,a_3 };
    static const uint8_t* b[4] = { b_0,b_1,b_2,b_3 };
    static const uint8_t* c[4] = { c_0,c_1,c_2,c_3 };
    // clang-format on
    for (int i = 0; i < num; i++)
    {
        sm2_fp_t x, y, z;
        uint8_t  buf[32];
        sm2_fp_from_bytes(x, a[i]);
        sm2_fp_from_bytes(y, b[i]);
        sm2_fp_sub(z, x, y);
        sm2_fp_to_bytes(buf, z);
        if (memcmp(c[i], buf, 32) != 0)
        {
            fprintf(stderr, "err %s, file: %s, line: %d\n", __FUNCTION__,
                    __FILE__, __LINE__);
            exit(-1);
        }
    }
}

static void test_sm2_fp_mul()
{
    // clang-format off
/*
num = 4
print(f"static int num = {num};")
for i in range(num):
    a = randint(0, sm2p - 1)
    b = randint(0, sm2p - 1)
    c = (a * b) % sm2p
    dump_int(f"static uint8_t a_{i}[32]" + " ={", a, "};")
    dump_int(f"static uint8_t b_{i}[32]" + " ={", b, "};")
    dump_int(f"static uint8_t c_{i}[32]" + " ={", c, "};")
print(f"static const uint8_t* a[{num}]" + " = {", ','.join([f"a_{i}" for i in range(num)]), "};")
print(f"static const uint8_t* b[{num}]" + " = {", ','.join([f"b_{i}" for i in range(num)]), "};")
print(f"static const uint8_t* c[{num}]" + " = {", ','.join([f"c_{i}" for i in range(num)]), "};")
*/
    static int num = 4;
    static uint8_t a_0[32] ={0x62, 0xc7, 0x9f, 0x58, 0x44, 0x30, 0x85, 0xa7, 0xd2, 0x49, 0xf8, 0x40, 0x07, 0x5f, 0xda, 0xea, 0x78, 0x30, 0x47, 0x79, 0xb1, 0xe9, 0x44, 0x31, 0xf6, 0x7e, 0x19, 0x17, 0x71, 0xe4, 0x2e, 0x1e, };
    static uint8_t b_0[32] ={0x34, 0xc6, 0xa5, 0x1d, 0x96, 0x76, 0x38, 0x49, 0x7a, 0x7e, 0xc2, 0xb2, 0x33, 0x60, 0x78, 0x73, 0xbf, 0x5e, 0x07, 0x9a, 0x4e, 0x4c, 0x26, 0xb3, 0xb9, 0xb3, 0x3a, 0x36, 0xac, 0x4c, 0x95, 0xc7, };
    static uint8_t c_0[32] ={0xc9, 0x0f, 0xa9, 0x5a, 0x1e, 0x5b, 0xed, 0xf4, 0xaf, 0x5b, 0xba, 0x8c, 0x61, 0xe7, 0x6e, 0x8f, 0x20, 0x6d, 0x7d, 0xcb, 0xf2, 0xd1, 0xdb, 0x3a, 0x43, 0xf3, 0x79, 0xba, 0x22, 0x7b, 0x26, 0x83, };
    static uint8_t a_1[32] ={0xf4, 0x3b, 0x57, 0xd5, 0xe1, 0xec, 0x64, 0xe0, 0x3b, 0x5b, 0x21, 0x05, 0x51, 0x18, 0xc3, 0xad, 0xe8, 0x24, 0xc5, 0x72, 0x4d, 0x04, 0xb6, 0x29, 0x63, 0x1d, 0x3b, 0xcd, 0xa3, 0xf6, 0xbe, 0xc3, };
    static uint8_t b_1[32] ={0x69, 0x6d, 0xf8, 0xd1, 0x54, 0x4b, 0x8f, 0x20, 0x41, 0x50, 0xeb, 0x51, 0x94, 0x50, 0xbd, 0x9d, 0xa1, 0x6c, 0x2f, 0x81, 0xcf, 0x72, 0x49, 0x9f, 0x28, 0x7c, 0x7f, 0x5a, 0x11, 0x0b, 0xdb, 0xe9, };
    static uint8_t c_1[32] ={0x8a, 0x50, 0xee, 0x2f, 0x7a, 0x33, 0x53, 0xda, 0xf0, 0xd3, 0xf5, 0x2f, 0x02, 0x39, 0x35, 0x87, 0x49, 0x12, 0x22, 0xd4, 0x0b, 0x45, 0x68, 0x7d, 0xaf, 0xc1, 0x4c, 0x35, 0x16, 0xee, 0x05, 0x48, };
    static uint8_t a_2[32] ={0x7d, 0x2b, 0x49, 0x1d, 0xa2, 0x09, 0xe9, 0xac, 0x87, 0x44, 0x34, 0xad, 0x52, 0x35, 0x5b, 0x6e, 0xcf, 0x3d, 0x7a, 0x04, 0x70, 0x2c, 0x0f, 0x3e, 0x4e, 0xfc, 0x4f, 0x5f, 0x7a, 0xeb, 0x23, 0xb5, };
    static uint8_t b_2[32] ={0x7f, 0x90, 0xbc, 0x0b, 0x7c, 0xb2, 0xd1, 0x0b, 0xe7, 0x25, 0x26, 0x0b, 0x90, 0x88, 0x4c, 0xd4, 0x5d, 0x66, 0x0b, 0x65, 0x4f, 0x84, 0x4c, 0x35, 0x08, 0xa4, 0x4b, 0x29, 0x4c, 0xe6, 0xf8, 0x43, };
    static uint8_t c_2[32] ={0x5c, 0xc3, 0x1c, 0xdc, 0xe9, 0x62, 0x42, 0x3b, 0x61, 0x27, 0xa0, 0x86, 0x15, 0xff, 0x3e, 0xe8, 0x6d, 0x5d, 0xb0, 0x00, 0x84, 0xe9, 0x97, 0x7d, 0x68, 0xb2, 0x20, 0x30, 0xd2, 0x5b, 0x6f, 0xda, };
    static uint8_t a_3[32] ={0x90, 0xb4, 0xb6, 0xfa, 0x27, 0x32, 0xc3, 0x9a, 0x2d, 0xc9, 0x0e, 0x80, 0x8e, 0xf6, 0x5e, 0x66, 0xba, 0x73, 0x23, 0xe5, 0x01, 0x42, 0x21, 0x64, 0xaa, 0x8d, 0xac, 0x8a, 0x80, 0xde, 0x81, 0x50, };
    static uint8_t b_3[32] ={0xd9, 0x09, 0x4d, 0x00, 0x52, 0x22, 0x8d, 0x25, 0x61, 0x51, 0xd2, 0xb8, 0xc2, 0xe4, 0x2b, 0x25, 0xb1, 0x6f, 0x96, 0x6a, 0x65, 0xb1, 0x1c, 0xd0, 0x50, 0x85, 0x09, 0x01, 0xb2, 0x70, 0x82, 0x0f, };
    static uint8_t c_3[32] ={0x4e, 0x8f, 0xc2, 0xc6, 0x38, 0x42, 0x70, 0xcf, 0x59, 0x5a, 0x1a, 0xf0, 0x5e, 0x7d, 0xa3, 0xa3, 0x69, 0x3a, 0x0e, 0xfc, 0xa6, 0xd1, 0xcb, 0x35, 0x9d, 0x06, 0x9e, 0x96, 0xee, 0x94, 0xa2, 0xb2, };
    static const uint8_t* a[4] = { a_0,a_1,a_2,a_3 };
    static const uint8_t* b[4] = { b_0,b_1,b_2,b_3 };
    static const uint8_t* c[4] = { c_0,c_1,c_2,c_3 };
    // clang-format on
    for (int i = 0; i < num; i++)
    {
        sm2_fp_t x, y, z;
        uint8_t  buf[32];
        sm2_fp_from_bytes(x, a[i]);
        sm2_fp_from_bytes(y, b[i]);
        sm2_fp_mul(z, x, y);
        sm2_fp_to_bytes(buf, z);
        if (memcmp(c[i], buf, 32) != 0)
        {
            fprintf(stderr, "err %s, file: %s, line: %d\n", __FUNCTION__,
                    __FILE__, __LINE__);
            exit(-1);
        }
    }
}

static void test_sm2_fp_sqr()
{
    // clang-format off
/*
num = 4
print(f"static int num = {num};")
for i in range(num):
    a = randint(0, sm2p - 1)
    c = (a * a) % sm2p
    dump_int(f"static uint8_t a_{i}[32]" + " ={", a, "};")
    dump_int(f"static uint8_t c_{i}[32]" + " ={", c, "};")
print(f"static const uint8_t* a[{num}]" + " = {", ','.join([f"a_{i}" for i in range(num)]), "};")
print(f"static const uint8_t* c[{num}]" + " = {", ','.join([f"c_{i}" for i in range(num)]), "};")
*/
    static int num = 4;
    static uint8_t a_0[32] ={0x76, 0xfa, 0x5f, 0x2f, 0xaa, 0xe4, 0x23, 0xbd, 0x8e, 0x04, 0x20, 0x92, 0x19, 0xe5, 0x2d, 0x94, 0x8b, 0x1f, 0x07, 0x58, 0x36, 0x3f, 0xfa, 0x0f, 0x23, 0x6e, 0x57, 0x75, 0xcd, 0x51, 0x78, 0x7b, };
    static uint8_t c_0[32] ={0x69, 0x26, 0xcb, 0x8f, 0xe7, 0xfe, 0x30, 0x2c, 0x9e, 0x52, 0xea, 0xf6, 0xb3, 0x29, 0x80, 0x1e, 0x65, 0xcf, 0x4f, 0xd4, 0x47, 0x87, 0xc4, 0x43, 0x45, 0x5e, 0x14, 0xcc, 0x7f, 0x8d, 0x66, 0xaa, };
    static uint8_t a_1[32] ={0xc8, 0xef, 0x90, 0xe1, 0x30, 0xb4, 0xe0, 0xa9, 0xec, 0xaa, 0x90, 0x9f, 0x52, 0x78, 0x9b, 0xc2, 0x0e, 0xbd, 0x9e, 0x9f, 0x2d, 0xef, 0x93, 0x57, 0x45, 0xa5, 0x81, 0x10, 0xa4, 0x69, 0xcd, 0xe3, };
    static uint8_t c_1[32] ={0xb9, 0xf0, 0x1d, 0xcd, 0x6c, 0x7f, 0x76, 0x45, 0xe4, 0x2e, 0x1e, 0xf6, 0x38, 0x04, 0x48, 0x05, 0x75, 0x60, 0x46, 0x13, 0xa0, 0x38, 0x4a, 0x54, 0xc9, 0x7e, 0x70, 0xff, 0xe2, 0xba, 0x3b, 0x25, };
    static uint8_t a_2[32] ={0x8a, 0x94, 0xbe, 0x1d, 0x4e, 0xa0, 0x0c, 0xca, 0x89, 0x2a, 0x90, 0x92, 0x59, 0x52, 0xed, 0x39, 0x00, 0x14, 0xee, 0x1c, 0x9d, 0xd2, 0x17, 0x48, 0x04, 0x78, 0xe0, 0x24, 0x42, 0x00, 0xb9, 0x26, };
    static uint8_t c_2[32] ={0x81, 0x66, 0x70, 0xf2, 0x91, 0xc8, 0x7a, 0xb5, 0x23, 0xc8, 0x12, 0x35, 0x04, 0x62, 0xcd, 0x30, 0x4c, 0xaf, 0xeb, 0x71, 0x45, 0xf2, 0x07, 0x20, 0x47, 0xc1, 0xef, 0x50, 0xaa, 0x60, 0xf3, 0x7a, };
    static uint8_t a_3[32] ={0x86, 0x7b, 0xac, 0x0e, 0xd2, 0xf0, 0x28, 0xbd, 0x89, 0x13, 0xda, 0xaf, 0x26, 0x6f, 0x59, 0x6e, 0x2b, 0x50, 0x4a, 0xa2, 0xad, 0x5c, 0x65, 0xd2, 0x51, 0xc4, 0x6e, 0x43, 0x83, 0xfe, 0xc1, 0x5b, };
    static uint8_t c_3[32] ={0xc0, 0x81, 0x93, 0x2a, 0xa0, 0xd4, 0x9f, 0x59, 0xb5, 0xb9, 0xd6, 0x32, 0x66, 0x31, 0x9f, 0x97, 0xfa, 0xc2, 0x95, 0x9f, 0xa0, 0x81, 0xd2, 0x4b, 0xc9, 0x4a, 0xc0, 0xfc, 0x29, 0x22, 0x64, 0x56, };
    static const uint8_t* a[4] = { a_0,a_1,a_2,a_3 };
    static const uint8_t* c[4] = { c_0,c_1,c_2,c_3 };
    // clang-format on
    for (int i = 0; i < num; i++)
    {
        sm2_fp_t x, z;
        uint8_t  buf[32];
        sm2_fp_from_bytes(x, a[i]);
        sm2_fp_sqr(z, x);
        sm2_fp_to_bytes(buf, z);
        if (memcmp(c[i], buf, 32) != 0)
        {
            fprintf(stderr, "err %s, file: %s, line: %d\n", __FUNCTION__,
                    __FILE__, __LINE__);
            exit(-1);
        }
    }
}

static void test_sm2_fp_neg()
{
    // clang-format off
/*
num = 4
print(f"static int num = {num};")
for i in range(num):
    a = randint(0, sm2p - 1)
    c = (sm2p - a) % sm2p
    dump_int(f"static uint8_t a_{i}[32]" + " ={", a, "};")
    dump_int(f"static uint8_t c_{i}[32]" + " ={", c, "};")
print(f"static const uint8_t* a[{num}]" + " = {", ','.join([f"a_{i}" for i in range(num)]), "};")
print(f"static const uint8_t* c[{num}]" + " = {", ','.join([f"c_{i}" for i in range(num)]), "};")
*/
    static int num = 4;
    static uint8_t a_0[32] ={0x94, 0x32, 0x6c, 0x45, 0x13, 0x17, 0x71, 0xcd, 0xb6, 0x35, 0x06, 0x2e, 0x3a, 0x4f, 0x9c, 0xa0, 0x6b, 0x6f, 0x3a, 0xd5, 0xee, 0xa8, 0x18, 0xac, 0x2d, 0x0d, 0xf8, 0x44, 0x1c, 0xc5, 0x82, 0x59, };
    static uint8_t c_0[32] ={0x6b, 0xcd, 0x93, 0xb9, 0xec, 0xe8, 0x8e, 0x32, 0x49, 0xca, 0xf9, 0xd1, 0xc5, 0xb0, 0x63, 0x5f, 0x94, 0x90, 0xc5, 0x29, 0x11, 0x57, 0xe7, 0x54, 0xd2, 0xf2, 0x07, 0xbb, 0xe3, 0x3a, 0x7d, 0xa6, };
    static uint8_t a_1[32] ={0x42, 0xa4, 0xfd, 0x76, 0x9f, 0x89, 0xdc, 0x25, 0xa3, 0x0e, 0xb2, 0xc0, 0x66, 0x9a, 0xc2, 0x73, 0xc1, 0xd7, 0x9a, 0x5f, 0x9b, 0x5b, 0x74, 0x92, 0x3e, 0x7a, 0x68, 0x57, 0xfe, 0x58, 0x00, 0x0e, };
    static uint8_t c_1[32] ={0xbd, 0x5b, 0x02, 0x88, 0x60, 0x76, 0x23, 0xda, 0x5c, 0xf1, 0x4d, 0x3f, 0x99, 0x65, 0x3d, 0x8c, 0x3e, 0x28, 0x65, 0x9f, 0x64, 0xa4, 0x8b, 0x6e, 0xc1, 0x85, 0x97, 0xa8, 0x01, 0xa7, 0xff, 0xf1, };
    static uint8_t a_2[32] ={0xab, 0xa4, 0x29, 0xc5, 0x3d, 0xec, 0x27, 0x35, 0x6f, 0xbb, 0xd1, 0x4e, 0xdb, 0xa5, 0x65, 0x3d, 0x9d, 0x7b, 0x4c, 0xed, 0x50, 0x33, 0xa1, 0x31, 0xde, 0x95, 0x8b, 0xc4, 0xce, 0xe9, 0xf2, 0x4d, };
    static uint8_t c_2[32] ={0x54, 0x5b, 0xd6, 0x39, 0xc2, 0x13, 0xd8, 0xca, 0x90, 0x44, 0x2e, 0xb1, 0x24, 0x5a, 0x9a, 0xc2, 0x62, 0x84, 0xb3, 0x11, 0xaf, 0xcc, 0x5e, 0xcf, 0x21, 0x6a, 0x74, 0x3b, 0x31, 0x16, 0x0d, 0xb2, };
    static uint8_t a_3[32] ={0x6f, 0x8b, 0x15, 0x4f, 0xe9, 0x83, 0xb1, 0xa5, 0xb7, 0x5e, 0x5d, 0xa0, 0x21, 0x40, 0xd6, 0x0b, 0x65, 0x44, 0xc0, 0x70, 0xda, 0x5a, 0xe9, 0x42, 0xd7, 0x15, 0x7d, 0x35, 0x2a, 0x37, 0x52, 0x1a, };
    static uint8_t c_3[32] ={0x90, 0x74, 0xea, 0xaf, 0x16, 0x7c, 0x4e, 0x5a, 0x48, 0xa1, 0xa2, 0x5f, 0xde, 0xbf, 0x29, 0xf4, 0x9a, 0xbb, 0x3f, 0x8e, 0x25, 0xa5, 0x16, 0xbe, 0x28, 0xea, 0x82, 0xca, 0xd5, 0xc8, 0xad, 0xe5, };
    static const uint8_t* a[4] = { a_0,a_1,a_2,a_3 };
    static const uint8_t* c[4] = { c_0,c_1,c_2,c_3 };
    // clang-format on
    for (int i = 0; i < num; i++)
    {
        sm2_fp_t x, z;
        uint8_t  buf[32];
        sm2_fp_from_bytes(x, a[i]);
        sm2_fp_neg(z, x);
        sm2_fp_to_bytes(buf, z);
        if (memcmp(c[i], buf, 32) != 0)
        {
            fprintf(stderr, "err %s, file: %s, line: %d\n", __FUNCTION__,
                    __FILE__, __LINE__);
            exit(-1);
        }
    }
}

static void test_sm2_fp_inv()
{
    // clang-format off
/*
num = 4
print(f"static int num = {num};")
for i in range(num):
    a = randint(0, sm2p - 1)
    c = pow(a, sm2p - 2, sm2p)
    dump_int(f"static uint8_t a_{i}[32]" + " ={", a, "};")
    dump_int(f"static uint8_t c_{i}[32]" + " ={", c, "};")
print(f"static const uint8_t* a[{num}]" + " = {", ','.join([f"a_{i}" for i in range(num)]), "};")
print(f"static const uint8_t* c[{num}]" + " = {", ','.join([f"c_{i}" for i in range(num)]), "};")
*/
    static int num = 4;
    static uint8_t a_0[32] ={0x83, 0xcd, 0x1f, 0x38, 0x89, 0xa0, 0x7e, 0x02, 0x1f, 0x7f, 0x4e, 0x46, 0x2e, 0x27, 0x08, 0x73, 0xdb, 0x25, 0x6d, 0xa5, 0xd5, 0x08, 0x6d, 0x6e, 0xc4, 0x47, 0xc3, 0x72, 0x90, 0xb3, 0x63, 0xcf, };
    static uint8_t c_0[32] ={0x56, 0x58, 0x5c, 0x64, 0xb9, 0x5f, 0xd2, 0xe1, 0x86, 0x9d, 0x03, 0x77, 0xfa, 0x0e, 0xc6, 0x14, 0x1e, 0xdd, 0xaf, 0x71, 0x35, 0x83, 0xfc, 0x2f, 0x04, 0x34, 0x93, 0x3d, 0x55, 0x6b, 0xb4, 0x27, };
    static uint8_t a_1[32] ={0x68, 0x21, 0x45, 0x4a, 0xa2, 0x35, 0xc4, 0x6d, 0x3f, 0x67, 0x32, 0x95, 0x7e, 0xb6, 0x23, 0x58, 0xff, 0x43, 0x93, 0xf8, 0x7f, 0x8d, 0xf5, 0x81, 0xa0, 0xf6, 0xdd, 0xae, 0x49, 0x9a, 0x78, 0x83, };
    static uint8_t c_1[32] ={0x01, 0x09, 0xa0, 0x61, 0xd5, 0xb9, 0x0a, 0x71, 0xe3, 0x04, 0xe6, 0xf2, 0xff, 0xe8, 0xef, 0x2f, 0xb7, 0x13, 0x40, 0x89, 0xa6, 0xc2, 0x70, 0xbe, 0x61, 0xe4, 0xb0, 0xdf, 0xaf, 0x3d, 0x6f, 0x16, };
    static uint8_t a_2[32] ={0x72, 0x10, 0x02, 0x05, 0x60, 0x67, 0xee, 0x90, 0xb8, 0x37, 0x91, 0xb8, 0xa6, 0x38, 0x46, 0x27, 0x8b, 0x6b, 0x0d, 0x68, 0xdd, 0xd0, 0x58, 0xe9, 0x97, 0xe3, 0x02, 0xc0, 0x22, 0x3d, 0x43, 0x9c, };
    static uint8_t c_2[32] ={0x25, 0x5d, 0x91, 0xcc, 0x7a, 0x5a, 0xf4, 0xbb, 0x8a, 0x56, 0x5a, 0x31, 0x70, 0xa6, 0x03, 0x78, 0xd0, 0x7c, 0x53, 0x28, 0x5f, 0xe3, 0x94, 0xcf, 0x98, 0x7d, 0xa2, 0xa2, 0x63, 0x7c, 0x5f, 0x8b, };
    static uint8_t a_3[32] ={0xad, 0x2c, 0x48, 0x02, 0x42, 0xf2, 0x56, 0xca, 0x65, 0x70, 0x5f, 0x9d, 0x93, 0xa7, 0x00, 0xfc, 0xda, 0x0b, 0xac, 0x27, 0x82, 0xb7, 0x56, 0xbe, 0xcc, 0xfe, 0x5d, 0xb7, 0x4f, 0x4b, 0x90, 0x22, };
    static uint8_t c_3[32] ={0x05, 0x19, 0xc3, 0x25, 0xc5, 0xcf, 0x3a, 0xa2, 0x71, 0xe2, 0x45, 0xc3, 0xa8, 0x99, 0xca, 0x19, 0x91, 0xb8, 0x87, 0x60, 0x1f, 0x5d, 0x3f, 0xa6, 0x76, 0xa2, 0xf4, 0x03, 0x84, 0x83, 0x3a, 0x13, };
    static const uint8_t* a[4] = { a_0,a_1,a_2,a_3 };
    static const uint8_t* c[4] = { c_0,c_1,c_2,c_3 };
    // clang-format on
    for (int i = 0; i < num; i++)
    {
        sm2_fp_t x, z;
        uint8_t  buf[32];
        sm2_fp_from_bytes(x, a[i]);
        sm2_fp_inv(z, x);
        sm2_fp_to_bytes(buf, z);
        if (memcmp(c[i], buf, 32) != 0)
        {
            fprintf(stderr, "err %s, file: %s, line: %d\n", __FUNCTION__,
                    __FILE__, __LINE__);
            exit(-1);
        }
    }
}

static void test_sm2_fp_one()
{
    static uint8_t ONE[32] = {
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    };
    uint8_t  buf[32];
    sm2_fp_t x;
    sm2_fp_set_one(x);
    if (!sm2_fp_equal_one(x))
    {
        fprintf(stderr, "err %s, file: %s, line: %d\n", __FUNCTION__, __FILE__,
                __LINE__);
        exit(-1);
    }
    sm2_fp_to_bytes(buf, x);
    if (memcmp(buf, ONE, 32) != 0)
    {
        fprintf(stderr, "err %s, file: %s, line: %d\n", __FUNCTION__, __FILE__,
                __LINE__);
        exit(-1);
    }
}

static void test_sm2_fn_add()
{
    // clang-format off
/*
num = 4
print(f"static int num = {num};")
for i in range(num):
    a = randint(0, sm2n - 1)
    b = randint(0, sm2n - 1)
    c = (a + b) % sm2n
    dump_int(f"static uint8_t a_{i}[32]" + " ={", a, "};")
    dump_int(f"static uint8_t b_{i}[32]" + " ={", b, "};")
    dump_int(f"static uint8_t c_{i}[32]" + " ={", c, "};")
print(f"static const uint8_t* a[{num}]" + " = {", ','.join([f"a_{i}" for i in range(num)]), "};")
print(f"static const uint8_t* b[{num}]" + " = {", ','.join([f"b_{i}" for i in range(num)]), "};")
print(f"static const uint8_t* c[{num}]" + " = {", ','.join([f"c_{i}" for i in range(num)]), "};")
*/
    static int num = 4;
    static uint8_t a_0[32] ={0x31, 0xdf, 0x5a, 0xab, 0xfc, 0xa1, 0xa7, 0x3c, 0xee, 0x11, 0xdc, 0x26, 0x35, 0x64, 0xfd, 0x40, 0xe3, 0x36, 0xbd, 0x4c, 0x1d, 0xc5, 0x72, 0x8d, 0xf0, 0x3e, 0x6e, 0x80, 0x08, 0x83, 0x69, 0x84, };
    static uint8_t b_0[32] ={0x28, 0xaf, 0x26, 0xb2, 0x19, 0x5b, 0xea, 0xff, 0x72, 0x6a, 0xea, 0x92, 0x46, 0x97, 0x43, 0xd1, 0x2f, 0xff, 0x28, 0x98, 0x9a, 0xad, 0xe7, 0x15, 0x94, 0xc4, 0xdc, 0xbf, 0x31, 0xe2, 0x51, 0x55, };
    static uint8_t c_0[32] ={0x5a, 0x8e, 0x81, 0x5e, 0x15, 0xfd, 0x92, 0x3c, 0x60, 0x7c, 0xc6, 0xb8, 0x7b, 0xfc, 0x41, 0x12, 0x13, 0x35, 0xe5, 0xe4, 0xb8, 0x73, 0x59, 0xa3, 0x85, 0x03, 0x4b, 0x3f, 0x3a, 0x65, 0xba, 0xd9, };
    static uint8_t a_1[32] ={0x5b, 0xbf, 0x8c, 0x5e, 0x7c, 0x01, 0x6f, 0x7f, 0x2e, 0x89, 0x74, 0xb5, 0xa6, 0xab, 0x66, 0xcc, 0x53, 0xf2, 0xf5, 0xfc, 0x46, 0x30, 0x83, 0xa3, 0x2b, 0xba, 0x6f, 0xee, 0x05, 0xcc, 0xb1, 0x10, };
    static uint8_t b_1[32] ={0x31, 0x85, 0xb3, 0xbb, 0xea, 0x87, 0x8a, 0xd2, 0x43, 0x7f, 0x15, 0x24, 0xbe, 0x0d, 0x4f, 0xf7, 0x01, 0x97, 0x2a, 0xfb, 0x0f, 0xfb, 0x2a, 0x86, 0x34, 0xf2, 0xf9, 0x83, 0xcb, 0x42, 0xe3, 0xa7, };
    static uint8_t c_1[32] ={0x8d, 0x45, 0x40, 0x1a, 0x66, 0x88, 0xfa, 0x51, 0x72, 0x08, 0x89, 0xda, 0x64, 0xb8, 0xb6, 0xc3, 0x55, 0x8a, 0x20, 0xf7, 0x56, 0x2b, 0xae, 0x29, 0x60, 0xad, 0x69, 0x71, 0xd1, 0x0f, 0x94, 0xb7, };
    static uint8_t a_2[32] ={0x16, 0x05, 0x96, 0x4b, 0xfc, 0xf5, 0x59, 0x0d, 0x3f, 0x3e, 0xa7, 0x72, 0x43, 0x10, 0x47, 0x02, 0x81, 0x73, 0x13, 0xe5, 0x8d, 0x2a, 0xc5, 0x56, 0xe9, 0xb3, 0x81, 0x91, 0x15, 0x3c, 0x8e, 0x91, };
    static uint8_t b_2[32] ={0xa9, 0x45, 0xa7, 0x7e, 0x23, 0x7a, 0x2b, 0xda, 0xba, 0xe4, 0x5d, 0xd3, 0x52, 0x97, 0x41, 0x33, 0x27, 0xdc, 0x0d, 0x1b, 0x2d, 0x59, 0x0d, 0x6d, 0xed, 0x70, 0x27, 0xaf, 0x19, 0x56, 0x07, 0xec, };
    static uint8_t c_2[32] ={0xbf, 0x4b, 0x3d, 0xca, 0x20, 0x6f, 0x84, 0xe7, 0xfa, 0x23, 0x05, 0x45, 0x95, 0xa7, 0x88, 0x35, 0xa9, 0x4f, 0x21, 0x00, 0xba, 0x83, 0xd2, 0xc4, 0xd7, 0x23, 0xa9, 0x40, 0x2e, 0x92, 0x96, 0x7d, };
    static uint8_t a_3[32] ={0xa3, 0x89, 0x81, 0xa5, 0x1a, 0xc3, 0x04, 0x49, 0x54, 0x8f, 0x03, 0xfa, 0x8f, 0xb7, 0x82, 0xe9, 0xae, 0x02, 0xab, 0x88, 0x4c, 0x5a, 0xc2, 0x03, 0xe4, 0x67, 0x61, 0x8d, 0xe8, 0xf9, 0x7c, 0xa3, };
    static uint8_t b_3[32] ={0xf9, 0xd7, 0x63, 0x9a, 0x40, 0x4f, 0xfc, 0xb2, 0xa3, 0xe5, 0xe4, 0x2f, 0x79, 0x34, 0x6a, 0xf0, 0x59, 0x61, 0x4a, 0xe2, 0x3d, 0x27, 0xed, 0xc4, 0xef, 0x7a, 0x2c, 0x7f, 0x7d, 0x38, 0x40, 0x40, };
    static uint8_t c_3[32] ={0x9d, 0x60, 0xe5, 0x40, 0x5b, 0x13, 0x00, 0xfb, 0xf8, 0x74, 0xe8, 0x2a, 0x08, 0xeb, 0xed, 0xda, 0x95, 0x60, 0x16, 0xff, 0x67, 0xbc, 0xaa, 0x9d, 0x80, 0x25, 0x9a, 0x04, 0x2c, 0x5c, 0x7b, 0xc0, };
    static const uint8_t* a[4] = { a_0,a_1,a_2,a_3 };
    static const uint8_t* b[4] = { b_0,b_1,b_2,b_3 };
    static const uint8_t* c[4] = { c_0,c_1,c_2,c_3 };
    // clang-format on
    for (int i = 0; i < num; i++)
    {
        sm2_fn_t x, y, z;
        uint8_t  buf[32];
        sm2_fn_from_bytes(x, a[i]);
        sm2_fn_from_bytes(y, b[i]);
        sm2_fn_add(z, x, y);
        sm2_fn_to_bytes(buf, z);
        if (memcmp(c[i], buf, 32) != 0)
        {
            fprintf(stderr, "err %s, file: %s, line: %d\n", __FUNCTION__,
                    __FILE__, __LINE__);
            exit(-1);
        }
    }
}

static void test_sm2_fn_sub()
{
    // clang-format off
/*
num = 4
print(f"static int num = {num};")
for i in range(num):
    a = randint(0, sm2n - 1)
    b = randint(0, sm2n - 1)
    c = (a - b) % sm2n
    dump_int(f"static uint8_t a_{i}[32]" + " ={", a, "};")
    dump_int(f"static uint8_t b_{i}[32]" + " ={", b, "};")
    dump_int(f"static uint8_t c_{i}[32]" + " ={", c, "};")
print(f"static const uint8_t* a[{num}]" + " = {", ','.join([f"a_{i}" for i in range(num)]), "};")
print(f"static const uint8_t* b[{num}]" + " = {", ','.join([f"b_{i}" for i in range(num)]), "};")
print(f"static const uint8_t* c[{num}]" + " = {", ','.join([f"c_{i}" for i in range(num)]), "};")
*/
    static int num = 4;
    static uint8_t a_0[32] ={0xea, 0xab, 0x8c, 0x4a, 0x23, 0x04, 0x37, 0x19, 0x28, 0x1a, 0xd9, 0x22, 0x9e, 0x42, 0xdf, 0x2b, 0x17, 0x26, 0x2c, 0x05, 0x2f, 0xc6, 0x20, 0x19, 0xf6, 0x0f, 0x40, 0xb8, 0x5f, 0x91, 0xc7, 0xdd, };
    static uint8_t b_0[32] ={0x9d, 0xf8, 0xfc, 0x17, 0x5a, 0x6b, 0xe5, 0x84, 0x98, 0x83, 0x62, 0x9c, 0xf3, 0x52, 0xdc, 0x8c, 0x6f, 0xe1, 0xb9, 0x1d, 0x4c, 0x63, 0xc9, 0xc1, 0x6d, 0x99, 0xcd, 0x66, 0x81, 0xbd, 0xf7, 0xcb, };
    static uint8_t c_0[32] ={0x4c, 0xb2, 0x90, 0x32, 0xc8, 0x98, 0x51, 0x94, 0x8f, 0x97, 0x76, 0x85, 0xaa, 0xf0, 0x02, 0x9e, 0xa7, 0x44, 0x72, 0xe7, 0xe3, 0x62, 0x56, 0x58, 0x88, 0x75, 0x73, 0x51, 0xdd, 0xd3, 0xd0, 0x12, };
    static uint8_t a_1[32] ={0x2c, 0xf5, 0x59, 0x0b, 0xc5, 0xec, 0xa3, 0x61, 0xf6, 0xca, 0xcc, 0x4d, 0x43, 0x11, 0xe8, 0x8e, 0x42, 0x3b, 0xbd, 0x85, 0x20, 0x11, 0x9c, 0x32, 0x72, 0xed, 0xc2, 0x47, 0xcf, 0xc4, 0xa4, 0xd2, };
    static uint8_t b_1[32] ={0x38, 0x8e, 0xc1, 0x84, 0x85, 0xb1, 0xa0, 0xa3, 0xed, 0x18, 0x02, 0x76, 0x8f, 0x2f, 0xcc, 0x0e, 0x0c, 0x67, 0x4b, 0xb8, 0x5b, 0xfb, 0x5a, 0xc0, 0x6c, 0x89, 0x66, 0xaf, 0xaa, 0x93, 0x4c, 0x1c, };
    static uint8_t c_1[32] ={0xf4, 0x66, 0x97, 0x86, 0x40, 0x3b, 0x02, 0xbe, 0x09, 0xb2, 0xc9, 0xd6, 0xb3, 0xe2, 0x1c, 0x7f, 0xa7, 0xd8, 0x51, 0x37, 0xe5, 0xdc, 0x46, 0x9d, 0x5a, 0x20, 0x4f, 0xa1, 0x5f, 0x06, 0x99, 0xd9, };
    static uint8_t a_2[32] ={0xa5, 0xca, 0x7a, 0xcf, 0x81, 0x90, 0x06, 0x07, 0x01, 0xae, 0x64, 0x3b, 0x67, 0xfb, 0x1d, 0x7c, 0xd3, 0x89, 0xae, 0x42, 0x6d, 0xa9, 0x7c, 0xb8, 0xb4, 0xf8, 0x3d, 0x87, 0x74, 0x59, 0xa2, 0x32, };
    static uint8_t b_2[32] ={0x28, 0xf6, 0x35, 0xac, 0xe2, 0x91, 0x38, 0xff, 0x93, 0xea, 0xc2, 0x05, 0xa2, 0x7d, 0x54, 0x93, 0x79, 0x8e, 0x2c, 0x75, 0x73, 0xe3, 0xc8, 0x16, 0xcc, 0x8b, 0xef, 0x08, 0x9a, 0x16, 0xfd, 0xba, };
    static uint8_t c_2[32] ={0x7c, 0xd4, 0x45, 0x22, 0x9e, 0xfe, 0xcd, 0x07, 0x6d, 0xc3, 0xa2, 0x35, 0xc5, 0x7d, 0xc8, 0xe9, 0x59, 0xfb, 0x81, 0xcc, 0xf9, 0xc5, 0xb4, 0xa1, 0xe8, 0x6c, 0x4e, 0x7e, 0xda, 0x42, 0xa4, 0x78, };
    static uint8_t a_3[32] ={0xd4, 0x9f, 0xdd, 0x5d, 0xf6, 0x9a, 0xa8, 0x86, 0x6d, 0xfa, 0xac, 0x9d, 0xca, 0x0b, 0xf8, 0xca, 0x6a, 0xa6, 0x8c, 0xcc, 0x27, 0x6b, 0x8c, 0x73, 0xeb, 0x11, 0xd4, 0x08, 0x2d, 0x5c, 0x1e, 0xd1, };
    static uint8_t b_3[32] ={0xd7, 0xad, 0x0f, 0x01, 0x08, 0xfd, 0x83, 0xc5, 0xb5, 0x46, 0x80, 0x96, 0x31, 0xdc, 0x0f, 0x20, 0x32, 0x1d, 0xe2, 0xaa, 0x94, 0x7b, 0x91, 0x86, 0x2a, 0x6e, 0xed, 0x45, 0xf1, 0x76, 0x9c, 0xa7, };
    static uint8_t c_3[32] ={0xfc, 0xf2, 0xce, 0x5b, 0xed, 0x9d, 0x24, 0xc0, 0xb8, 0xb4, 0x2c, 0x07, 0x98, 0x2f, 0xe9, 0xa9, 0xaa, 0x8c, 0x89, 0x8c, 0xb4, 0xb6, 0x00, 0x19, 0x14, 0x5e, 0xda, 0xcb, 0x75, 0xba, 0xc3, 0x4d, };
    static const uint8_t* a[4] = { a_0,a_1,a_2,a_3 };
    static const uint8_t* b[4] = { b_0,b_1,b_2,b_3 };
    static const uint8_t* c[4] = { c_0,c_1,c_2,c_3 };
    // clang-format on
    for (int i = 0; i < num; i++)
    {
        sm2_fn_t x, y, z;
        uint8_t  buf[32];
        sm2_fn_from_bytes(x, a[i]);
        sm2_fn_from_bytes(y, b[i]);
        sm2_fn_sub(z, x, y);
        sm2_fn_to_bytes(buf, z);
        if (memcmp(c[i], buf, 32) != 0)
        {
            fprintf(stderr, "err %s, file: %s, line: %d\n", __FUNCTION__,
                    __FILE__, __LINE__);
            exit(-1);
        }
    }
}

static void test_sm2_fn_mul()
{
    // clang-format off
/*
num = 4
print(f"static int num = {num};")
for i in range(num):
    a = randint(0, sm2n - 1)
    b = randint(0, sm2n - 1)
    c = (a * b) % sm2n
    dump_int(f"static uint8_t a_{i}[32]" + " ={", a, "};")
    dump_int(f"static uint8_t b_{i}[32]" + " ={", b, "};")
    dump_int(f"static uint8_t c_{i}[32]" + " ={", c, "};")
print(f"static const uint8_t* a[{num}]" + " = {", ','.join([f"a_{i}" for i in range(num)]), "};")
print(f"static const uint8_t* b[{num}]" + " = {", ','.join([f"b_{i}" for i in range(num)]), "};")
print(f"static const uint8_t* c[{num}]" + " = {", ','.join([f"c_{i}" for i in range(num)]), "};")
*/
    static int num = 4;
    static uint8_t a_0[32] ={0x34, 0xf3, 0x02, 0x9a, 0x81, 0xc7, 0xdc, 0x39, 0x4f, 0x13, 0x9c, 0xc2, 0x17, 0x3f, 0x67, 0x11, 0x2f, 0x81, 0x44, 0xa8, 0x0e, 0x9d, 0xff, 0xbc, 0x20, 0x3d, 0xfc, 0xe8, 0x96, 0x12, 0xed, 0x80, };
    static uint8_t b_0[32] ={0xd0, 0x51, 0x30, 0x2f, 0x47, 0x03, 0x15, 0x38, 0x6d, 0xb8, 0x27, 0xca, 0xdd, 0x05, 0xdb, 0x25, 0x9d, 0x32, 0xf4, 0xa6, 0x1f, 0xdf, 0xdb, 0x9a, 0x31, 0xd2, 0xbc, 0xdb, 0xcb, 0xcd, 0x90, 0x4b, };
    static uint8_t c_0[32] ={0x2a, 0xaf, 0x56, 0xfa, 0x5d, 0x7d, 0xfe, 0x4c, 0x88, 0xf0, 0x1f, 0xa4, 0x70, 0xa1, 0xd7, 0x40, 0xbe, 0x4f, 0xc3, 0x9b, 0xf6, 0xb7, 0xdc, 0x8e, 0x4d, 0xbf, 0xd6, 0x18, 0xb5, 0x72, 0x3b, 0x71, };
    static uint8_t a_1[32] ={0xe1, 0x40, 0x26, 0xd8, 0x8d, 0x2d, 0x95, 0xc1, 0x6d, 0x5e, 0x88, 0xd6, 0xac, 0x54, 0xe2, 0x38, 0xb3, 0x44, 0xc7, 0x95, 0x23, 0x71, 0xd3, 0x96, 0xc3, 0x47, 0x74, 0x74, 0xeb, 0xc6, 0x89, 0x30, };
    static uint8_t b_1[32] ={0x69, 0xc4, 0x77, 0xf7, 0x48, 0xd6, 0x44, 0x3f, 0xbe, 0x58, 0xce, 0x89, 0x14, 0x92, 0xea, 0x18, 0xe3, 0xfc, 0x29, 0x40, 0x0d, 0x45, 0xa7, 0xfe, 0xd8, 0xf5, 0x6d, 0x21, 0x5f, 0x12, 0xc0, 0xaa, };
    static uint8_t c_1[32] ={0x0b, 0x21, 0x30, 0x8e, 0xcb, 0x4a, 0x5f, 0xf0, 0x14, 0x26, 0xa3, 0xd0, 0x04, 0xcf, 0x1c, 0x22, 0xfa, 0xc2, 0x19, 0x96, 0x02, 0xf4, 0x44, 0x66, 0xab, 0x27, 0x43, 0x8b, 0xff, 0x2e, 0x4c, 0x5a, };
    static uint8_t a_2[32] ={0x30, 0x81, 0x63, 0xeb, 0x2c, 0xf8, 0x48, 0x25, 0x93, 0x87, 0x43, 0xc2, 0x6e, 0x74, 0x85, 0x9f, 0x82, 0x56, 0x9f, 0x38, 0x23, 0xab, 0xbc, 0x67, 0x3e, 0xa7, 0x91, 0x8e, 0x2b, 0x45, 0xd4, 0x9b, };
    static uint8_t b_2[32] ={0x6d, 0x12, 0x62, 0xc1, 0x42, 0x00, 0x8d, 0x6b, 0x6a, 0x92, 0x6a, 0xf7, 0xa7, 0xa2, 0x6f, 0xb2, 0x27, 0x49, 0x09, 0xae, 0x92, 0x47, 0x98, 0xac, 0x36, 0xa3, 0xce, 0x8d, 0x04, 0x02, 0x50, 0x8e, };
    static uint8_t c_2[32] ={0x43, 0x66, 0x30, 0x84, 0xde, 0xc2, 0x9a, 0x27, 0xd6, 0xe3, 0xac, 0x25, 0xa6, 0x3f, 0xa3, 0x56, 0x85, 0xf8, 0xb2, 0x21, 0xdf, 0x4d, 0xc6, 0x0e, 0x3a, 0xdd, 0x18, 0xaf, 0x73, 0x67, 0x47, 0x98, };
    static uint8_t a_3[32] ={0x0e, 0x02, 0xb1, 0x61, 0xa1, 0x4f, 0x18, 0xa4, 0xdd, 0x31, 0x02, 0x68, 0xbb, 0x56, 0x35, 0x7e, 0x1b, 0xef, 0xe1, 0x2e, 0x2c, 0x66, 0x81, 0xec, 0x5e, 0x19, 0x13, 0x79, 0x92, 0x03, 0x56, 0x06, };
    static uint8_t b_3[32] ={0xf8, 0xaa, 0x4a, 0x1b, 0xc7, 0x37, 0xee, 0x3d, 0xb6, 0xc6, 0x0b, 0xd2, 0xc7, 0x8b, 0xff, 0x25, 0x64, 0xde, 0xed, 0xd7, 0x1d, 0xa3, 0xd5, 0x1e, 0x47, 0x38, 0x9d, 0xd5, 0x04, 0x9d, 0xaf, 0x2d, };
    static uint8_t c_3[32] ={0x0a, 0x3a, 0x84, 0x56, 0xd2, 0x0c, 0x36, 0xde, 0x94, 0x56, 0x99, 0x3d, 0x95, 0xec, 0xac, 0x96, 0xd7, 0x9a, 0x1c, 0x38, 0x81, 0x64, 0x61, 0x1b, 0xd7, 0xee, 0xfa, 0x8d, 0xad, 0x54, 0xf7, 0xd7, };
    static const uint8_t* a[4] = { a_0,a_1,a_2,a_3 };
    static const uint8_t* b[4] = { b_0,b_1,b_2,b_3 };
    static const uint8_t* c[4] = { c_0,c_1,c_2,c_3 };
    // clang-format on
    for (int i = 0; i < num; i++)
    {
        sm2_fn_t x, y, z;
        uint8_t  buf[32];
        sm2_fn_from_bytes(x, a[i]);
        sm2_fn_from_bytes(y, b[i]);
        sm2_fn_mul(z, x, y);
        sm2_fn_to_bytes(buf, z);
        if (memcmp(c[i], buf, 32) != 0)
        {
            fprintf(stderr, "err %s, file: %s, line: %d\n", __FUNCTION__,
                    __FILE__, __LINE__);
            exit(-1);
        }
    }
}

static void test_sm2_fn_sqr()
{
    // clang-format off
/*
num = 4
print(f"static int num = {num};")
for i in range(num):
    a = randint(0, sm2n - 1)
    c = (a * a) % sm2n
    dump_int(f"static uint8_t a_{i}[32]" + " ={", a, "};")
    dump_int(f"static uint8_t c_{i}[32]" + " ={", c, "};")
print(f"static const uint8_t* a[{num}]" + " = {", ','.join([f"a_{i}" for i in range(num)]), "};")
print(f"static const uint8_t* c[{num}]" + " = {", ','.join([f"c_{i}" for i in range(num)]), "};")
*/
    static int num = 4;
    static uint8_t a_0[32] ={0x34, 0xb7, 0xe7, 0x04, 0xb1, 0x0b, 0xdf, 0x10, 0x6f, 0x07, 0x9e, 0xc2, 0xab, 0xd1, 0xb5, 0x1f, 0x80, 0x77, 0x40, 0xfd, 0xc3, 0x98, 0x8e, 0x78, 0x74, 0x2a, 0xd2, 0x1a, 0x64, 0xe3, 0x7e, 0x8d, };
    static uint8_t c_0[32] ={0x76, 0x50, 0x18, 0x8e, 0x3d, 0xc2, 0x98, 0x82, 0x5c, 0x91, 0x4b, 0x20, 0x12, 0x99, 0xa8, 0x61, 0xdb, 0x6c, 0x45, 0xe9, 0xf9, 0x4d, 0x1d, 0x07, 0x79, 0x8b, 0x37, 0x6a, 0x0f, 0x0c, 0x78, 0x86, };
    static uint8_t a_1[32] ={0x67, 0x9a, 0xea, 0x26, 0xb3, 0xe5, 0x6b, 0xd9, 0xbd, 0xb4, 0xb0, 0x05, 0x7e, 0x02, 0xb4, 0x93, 0x69, 0xc6, 0x2a, 0x47, 0xbb, 0xc5, 0x4e, 0xb9, 0x65, 0x56, 0x4d, 0xc8, 0xb8, 0x77, 0xab, 0xdd, };
    static uint8_t c_1[32] ={0x82, 0x5e, 0x61, 0x58, 0x00, 0xc8, 0x56, 0xe5, 0xa1, 0xae, 0xde, 0xb4, 0xf4, 0xd7, 0x19, 0x1a, 0xd3, 0x52, 0x62, 0xbd, 0x81, 0x70, 0x70, 0xac, 0x7d, 0x2c, 0x0a, 0x09, 0x53, 0xc7, 0xc6, 0x24, };
    static uint8_t a_2[32] ={0x99, 0x64, 0xe3, 0x5d, 0xe1, 0xda, 0x74, 0xde, 0xb6, 0x0c, 0x7a, 0x46, 0x2b, 0xd5, 0x69, 0xad, 0x4d, 0x7c, 0xa3, 0x39, 0x37, 0x21, 0x19, 0x52, 0xa4, 0x31, 0x71, 0x54, 0xcb, 0x06, 0x75, 0x44, };
    static uint8_t c_2[32] ={0x2f, 0xb6, 0xcf, 0x0e, 0x73, 0x15, 0x56, 0x72, 0xc2, 0xae, 0xbd, 0x77, 0x62, 0xba, 0x7b, 0xf5, 0x6a, 0x89, 0x53, 0xa6, 0x7f, 0xf4, 0xfc, 0xf1, 0x6d, 0x83, 0x64, 0x03, 0x53, 0x70, 0xa2, 0x98, };
    static uint8_t a_3[32] ={0x57, 0x57, 0x20, 0x64, 0x30, 0x99, 0x64, 0x44, 0x00, 0x92, 0x05, 0x46, 0xd5, 0xcb, 0xfd, 0x10, 0x08, 0x95, 0x93, 0x5c, 0x65, 0x48, 0xa1, 0x31, 0x24, 0xda, 0x5e, 0x83, 0xef, 0xff, 0x99, 0x69, };
    static uint8_t c_3[32] ={0x71, 0x1f, 0xf7, 0x87, 0xde, 0x53, 0x04, 0xc8, 0xfd, 0x56, 0x8b, 0xef, 0xcf, 0x99, 0x46, 0x1e, 0xab, 0xcd, 0xb8, 0xed, 0x8d, 0xd6, 0x0b, 0xc8, 0x57, 0xf2, 0x15, 0x20, 0x05, 0x03, 0xa4, 0x2e, };
    static const uint8_t* a[4] = { a_0,a_1,a_2,a_3 };
    static const uint8_t* c[4] = { c_0,c_1,c_2,c_3 };
    // clang-format on
    for (int i = 0; i < num; i++)
    {
        sm2_fn_t x, z;
        uint8_t  buf[32];
        sm2_fn_from_bytes(x, a[i]);
        sm2_fn_sqr(z, x);
        sm2_fn_to_bytes(buf, z);
        if (memcmp(c[i], buf, 32) != 0)
        {
            fprintf(stderr, "err %s, file: %s, line: %d\n", __FUNCTION__,
                    __FILE__, __LINE__);
            exit(-1);
        }
    }
}

static void test_sm2_fn_inv()
{
    // clang-format off
/*
num = 4
print(f"static int num = {num};")
for i in range(num):
    a = randint(0, sm2n - 1)
    c = pow(a, sm2n - 2, sm2n)
    dump_int(f"static uint8_t a_{i}[32]" + " ={", a, "};")
    dump_int(f"static uint8_t c_{i}[32]" + " ={", c, "};")
print(f"static const uint8_t* a[{num}]" + " = {", ','.join([f"a_{i}" for i in range(num)]), "};")
print(f"static const uint8_t* c[{num}]" + " = {", ','.join([f"c_{i}" for i in range(num)]), "};")
*/
    static int num = 4;
    static uint8_t a_0[32] ={0xde, 0x54, 0x78, 0x59, 0xc2, 0x6f, 0x68, 0x7f, 0x81, 0x25, 0xa7, 0x6d, 0x02, 0x76, 0x80, 0xd5, 0x17, 0x9b, 0x9f, 0x7e, 0x53, 0x22, 0x8c, 0x91, 0x29, 0x6c, 0x16, 0x92, 0x01, 0x12, 0x70, 0xb4, };
    static uint8_t c_0[32] ={0x68, 0xd0, 0xe4, 0xbe, 0xb7, 0xef, 0xb5, 0x1f, 0xd2, 0x2a, 0xdb, 0xc2, 0xff, 0x9c, 0x34, 0x11, 0x89, 0x67, 0xf8, 0xa0, 0x53, 0xfd, 0xbd, 0x6d, 0x3e, 0xc0, 0x72, 0x8b, 0xba, 0x3d, 0xcf, 0xc6, };
    static uint8_t a_1[32] ={0x93, 0x49, 0xee, 0x0d, 0x16, 0xa5, 0x23, 0x46, 0x29, 0xf6, 0x31, 0xe7, 0x60, 0x5b, 0xd9, 0xb8, 0xc1, 0xc7, 0xcb, 0xd7, 0x95, 0x48, 0xf1, 0x2a, 0x81, 0xed, 0x0f, 0xcb, 0x94, 0x17, 0x69, 0x77, };
    static uint8_t c_1[32] ={0x2b, 0x6d, 0x75, 0xf7, 0xfc, 0x4c, 0xaf, 0x6a, 0x8c, 0xe1, 0xac, 0x53, 0xc8, 0xce, 0x33, 0x36, 0xde, 0xbc, 0x3d, 0xb1, 0x57, 0x31, 0x22, 0x56, 0x4c, 0x61, 0x94, 0xd8, 0xff, 0xf9, 0x26, 0x3f, };
    static uint8_t a_2[32] ={0x6a, 0xad, 0x56, 0x4f, 0xd6, 0x08, 0xaf, 0xb6, 0x2b, 0xb6, 0x56, 0xe8, 0xba, 0x3e, 0x24, 0xc5, 0xa1, 0xc1, 0x06, 0xb4, 0x02, 0x9f, 0x2b, 0xe6, 0xe0, 0x50, 0x5f, 0xca, 0x90, 0xb4, 0x67, 0xbd, };
    static uint8_t c_2[32] ={0x5e, 0x19, 0x54, 0x11, 0x8c, 0xff, 0xa3, 0x02, 0x9f, 0x04, 0x16, 0xee, 0xc7, 0x2a, 0x68, 0x5c, 0xab, 0xf2, 0x31, 0xcc, 0x4e, 0xea, 0x68, 0x30, 0xf5, 0xf4, 0xc3, 0x4e, 0xaa, 0x36, 0xac, 0x47, };
    static uint8_t a_3[32] ={0x3c, 0x48, 0x39, 0x0f, 0x2f, 0x98, 0x03, 0x56, 0x69, 0x3f, 0x7c, 0x5a, 0xf5, 0xa5, 0xaf, 0x04, 0xaa, 0x64, 0x9e, 0xd6, 0x8d, 0x16, 0x6e, 0x89, 0xd8, 0x6d, 0x45, 0xda, 0xb7, 0xde, 0xf5, 0x5c, };
    static uint8_t c_3[32] ={0x23, 0x8b, 0xe2, 0x7f, 0x58, 0x02, 0x47, 0x92, 0x08, 0x02, 0xb7, 0x5d, 0xa8, 0x88, 0xf0, 0x4b, 0x9e, 0x3b, 0x4d, 0x8d, 0x12, 0x47, 0xa1, 0x1b, 0xb0, 0xe0, 0x4d, 0x7f, 0x8d, 0xf1, 0x07, 0x25, };
    static const uint8_t* a[4] = { a_0,a_1,a_2,a_3 };
    static const uint8_t* c[4] = { c_0,c_1,c_2,c_3 };
    // clang-format on
    for (int i = 0; i < num; i++)
    {
        sm2_fn_t x, z;
        uint8_t  buf[32];
        sm2_fn_from_bytes(x, a[i]);
        sm2_fn_inv(z, x);
        sm2_fn_to_bytes(buf, z);
        if (memcmp(c[i], buf, 32) != 0)
        {
            fprintf(stderr, "err %s, file: %s, line: %d\n", __FUNCTION__,
                    __FILE__, __LINE__);
            exit(-1);
        }
    }
}

static void test_sm2_fn_one()
{
    static uint8_t ONE[32] = {
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    };
    uint8_t  buf[32];
    sm2_fn_t x;
    sm2_fn_set_one(x);
    if (!sm2_fn_equal_one(x))
    {
        fprintf(stderr, "err %s, file: %s, line: %d\n", __FUNCTION__, __FILE__,
                __LINE__);
        exit(-1);
    }
    sm2_fn_to_bytes(buf, x);
    if (memcmp(buf, ONE, 32) != 0)
    {
        fprintf(stderr, "err %s, file: %s, line: %d\n", __FUNCTION__, __FILE__,
                __LINE__);
        exit(-1);
    }
}

static void test_sm2_ec_a_check()
{
    sm2_ec_t G;
    sm2_fp_from_bytes(G.a[0], SM2_CURVE_GX);
    sm2_fp_from_bytes(G.a[1], SM2_CURVE_GY);
    if (!sm2_ec_a_check(G.a))
    {
        fprintf(stderr, "err %s, file: %s, line: %d\n", __FUNCTION__, __FILE__,
                __LINE__);
        exit(-1);
    }
}

// static void test_sm2_ec_j_add();

// static void test_sm2_ec_j_add_a();

// static void test_sm2_ec_j_dbl();

static void test_sm2_ec_j_mul_a()
{
    static const uint8_t k[32] = {
        0x39, 0x45, 0x20, 0x8f, 0x7b, 0x21, 0x44, 0xb1, 0x3f, 0x36, 0xe3,
        0x8a, 0xc6, 0xd3, 0x9f, 0x95, 0x88, 0x93, 0x93, 0x69, 0x28, 0x60,
        0xb5, 0x1a, 0x42, 0xfb, 0x81, 0xef, 0x4d, 0xf7, 0xc5, 0xb8,
    };
    static const uint8_t Rx[32] = {
        0x09, 0xf9, 0xdf, 0x31, 0x1e, 0x54, 0x21, 0xa1, 0x50, 0xdd, 0x7d,
        0x16, 0x1e, 0x4b, 0xc5, 0xc6, 0x72, 0x17, 0x9f, 0xad, 0x18, 0x33,
        0xfc, 0x07, 0x6b, 0xb0, 0x8f, 0xf3, 0x56, 0xf3, 0x50, 0x20,
    };
    static const uint8_t Ry[32] = {
        0xcc, 0xea, 0x49, 0x0c, 0xe2, 0x67, 0x75, 0xa5, 0x2d, 0xc6, 0xea,
        0x71, 0x8c, 0xc1, 0xaa, 0x60, 0x0a, 0xed, 0x05, 0xfb, 0xf3, 0x5e,
        0x08, 0x4a, 0x66, 0x32, 0xf6, 0x07, 0x2d, 0xa9, 0xad, 0x13,
    };
    uint8_t  G_data[64], out[64];
    sm2_ec_t T, G;
    memcpy(G_data, SM2_CURVE_GX, 32), memcpy(G_data + 32, SM2_CURVE_GY, 32);
    sm2_ec_a_from_bytes04(G.a, G_data);
    sm2_ec_j_mul_a(T.j, k, G.a);
    sm2_ec_j_to_a(T.a, T.j);
    sm2_ec_a_to_bytes04(out, T.a);
    if (memcmp(out, Rx, 32) != 0 && memcmp(out + 32, Ry, 32) != 0)
    {
        fprintf(stderr, "err %s, file: %s, line: %d\n", __FUNCTION__, __FILE__,
                __LINE__);
        exit(-1);
    }
}

static void test_sm2_ec_j_mul_g()
{
    static const uint8_t k[32] = {
        0x39, 0x45, 0x20, 0x8f, 0x7b, 0x21, 0x44, 0xb1, 0x3f, 0x36, 0xe3,
        0x8a, 0xc6, 0xd3, 0x9f, 0x95, 0x88, 0x93, 0x93, 0x69, 0x28, 0x60,
        0xb5, 0x1a, 0x42, 0xfb, 0x81, 0xef, 0x4d, 0xf7, 0xc5, 0xb8,
    };
    static const uint8_t Rx[32] = {
        0x09, 0xf9, 0xdf, 0x31, 0x1e, 0x54, 0x21, 0xa1, 0x50, 0xdd, 0x7d,
        0x16, 0x1e, 0x4b, 0xc5, 0xc6, 0x72, 0x17, 0x9f, 0xad, 0x18, 0x33,
        0xfc, 0x07, 0x6b, 0xb0, 0x8f, 0xf3, 0x56, 0xf3, 0x50, 0x20,
    };
    static const uint8_t Ry[32] = {
        0xcc, 0xea, 0x49, 0x0c, 0xe2, 0x67, 0x75, 0xa5, 0x2d, 0xc6, 0xea,
        0x71, 0x8c, 0xc1, 0xaa, 0x60, 0x0a, 0xed, 0x05, 0xfb, 0xf3, 0x5e,
        0x08, 0x4a, 0x66, 0x32, 0xf6, 0x07, 0x2d, 0xa9, 0xad, 0x13,
    };
    uint8_t  out[64];
    sm2_ec_t T;
    sm2_ec_j_mul_g(T.j, k);
    sm2_ec_j_to_a(T.a, T.j);
    sm2_ec_a_to_bytes04(out, T.a);
    if (memcmp(out, Rx, 32) != 0 && memcmp(out + 32, Ry, 32) != 0)
    {
        fprintf(stderr, "err %s, file: %s, line: %d\n", __FUNCTION__, __FILE__,
                __LINE__);
        exit(-1);
    }
}

static void test_sm2_ec_j_equal()
{
    static const uint8_t k[32] = {
        0x39, 0x45, 0x20, 0x8f, 0x7b, 0x21, 0x44, 0xb1, 0x3f, 0x36, 0xe3,
        0x8a, 0xc6, 0xd3, 0x9f, 0x95, 0x88, 0x93, 0x93, 0x69, 0x28, 0x60,
        0xb5, 0x1a, 0x42, 0xfb, 0x81, 0xef, 0x4d, 0xf7, 0xc5, 0xb8,
    };
    sm2_ec_j T, P;
    sm2_ec_j_mul_g(T, k);
    sm2_ec_j_normal(P, T);
    if (!sm2_ec_j_equal(T, P))
    {
        fprintf(stderr, "err %s, file: %s, line: %d\n", __FUNCTION__, __FILE__,
                __LINE__);
        exit(-1);
    }
}

int main()
{
    // bn
    test_sm2_bn_cmp();
    test_sm2_bn_add_uint32();
    test_sm2_bn_mod_n_sub2();
    test_sm2_bn_mod_n_sub3();
    // fp
    test_sm2_fp_add();
    test_sm2_fp_dbl();
    test_sm2_fp_tpl();
    test_sm2_fp_sub();
    test_sm2_fp_mul();
    test_sm2_fp_sqr();
    test_sm2_fp_neg();
    test_sm2_fp_inv();
    test_sm2_fp_one();
    // fn
    test_sm2_fn_add();
    test_sm2_fn_sub();
    test_sm2_fn_mul();
    test_sm2_fn_sqr();
    test_sm2_fn_inv();
    test_sm2_fn_one();
    // ec
    test_sm2_ec_a_check();
    test_sm2_ec_j_mul_a();
    test_sm2_ec_j_mul_g();
    test_sm2_ec_j_equal();
    puts("sm2p256v1 test ok!");
    return 0;
}
#endif